C51 COMPILER V9.51   MOTOR_EN                                                              05/11/2016 14:38:03 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE MOTOR_EN
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Debug\MOTOR_EN.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\MOTOR_EN.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB WL(2) PR
                    -(.\DP8051_Keil_951\Debug/MOTOR_EN.lst) CD OT(2,SIZE) OJ(.\DP8051_Keil_951\Debug\MOTOR_EN.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: MOTOR_EN.c  
   3          * Version 2.10
   4          *
   5          * Description:
   6          *  This file contains API to enable firmware control of a Pins component.
   7          *
   8          * Note:
   9          *
  10          ********************************************************************************
  11          * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions, 
  13          * disclaimers, and limitations in the end user license agreement accompanying 
  14          * the software package with which this file was provided.
  15          *******************************************************************************/
  16          
  17          #include "cytypes.h"
  18          #include "MOTOR_EN.h"
  19          
  20          
  21          /*******************************************************************************
  22          * Function Name: MOTOR_EN_Write
  23          ********************************************************************************
  24          *
  25          * Summary:
  26          *  Assign a new value to the digital port's data output register.  
  27          *
  28          * Parameters:  
  29          *  prtValue:  The value to be assigned to the Digital Port. 
  30          *
  31          * Return: 
  32          *  None 
  33          *  
  34          *******************************************************************************/
  35          void MOTOR_EN_Write(uint8 value) 
  36          {
  37   1          uint8 staticBits = (MOTOR_EN_DR & (uint8)(~MOTOR_EN_MASK));
  38   1          MOTOR_EN_DR = staticBits | ((uint8)(value << MOTOR_EN_SHIFT) & MOTOR_EN_MASK);
  39   1      }
  40          
  41          
  42          /*******************************************************************************
  43          * Function Name: MOTOR_EN_SetDriveMode
  44          ********************************************************************************
  45          *
  46          * Summary:
  47          *  Change the drive mode on the pins of the port.
  48          * 
  49          * Parameters:  
  50          *  mode:  Change the pins to one of the following drive modes.
  51          *
  52          *  MOTOR_EN_DM_STRONG     Strong Drive 
  53          *  MOTOR_EN_DM_OD_HI      Open Drain, Drives High 
C51 COMPILER V9.51   MOTOR_EN                                                              05/11/2016 14:38:03 PAGE 2   

  54          *  MOTOR_EN_DM_OD_LO      Open Drain, Drives Low 
  55          *  MOTOR_EN_DM_RES_UP     Resistive Pull Up 
  56          *  MOTOR_EN_DM_RES_DWN    Resistive Pull Down 
  57          *  MOTOR_EN_DM_RES_UPDWN  Resistive Pull Up/Down 
  58          *  MOTOR_EN_DM_DIG_HIZ    High Impedance Digital 
  59          *  MOTOR_EN_DM_ALG_HIZ    High Impedance Analog 
  60          *
  61          * Return: 
  62          *  None
  63          *
  64          *******************************************************************************/
  65          void MOTOR_EN_SetDriveMode(uint8 mode) 
  66          {
  67   1              CyPins_SetPinDriveMode(MOTOR_EN_0, mode);
  68   1              CyPins_SetPinDriveMode(MOTOR_EN_1, mode);
  69   1      }
  70          
  71          
  72          /*******************************************************************************
  73          * Function Name: MOTOR_EN_Read
  74          ********************************************************************************
  75          *
  76          * Summary:
  77          *  Read the current value on the pins of the Digital Port in right justified 
  78          *  form.
  79          *
  80          * Parameters:  
  81          *  None 
  82          *
  83          * Return: 
  84          *  Returns the current value of the Digital Port as a right justified number
  85          *  
  86          * Note:
  87          *  Macro MOTOR_EN_ReadPS calls this function. 
  88          *  
  89          *******************************************************************************/
  90          uint8 MOTOR_EN_Read(void) 
  91          {
  92   1          return (MOTOR_EN_PS & MOTOR_EN_MASK) >> MOTOR_EN_SHIFT;
  93   1      }
  94          
  95          
  96          /*******************************************************************************
  97          * Function Name: MOTOR_EN_ReadDataReg
  98          ********************************************************************************
  99          *
 100          * Summary:
 101          *  Read the current value assigned to a Digital Port's data output register
 102          *
 103          * Parameters:  
 104          *  None 
 105          *
 106          * Return: 
 107          *  Returns the current value assigned to the Digital Port's data output register
 108          *  
 109          *******************************************************************************/
 110          uint8 MOTOR_EN_ReadDataReg(void) 
 111          {
 112   1          return (MOTOR_EN_DR & MOTOR_EN_MASK) >> MOTOR_EN_SHIFT;
 113   1      }
 114          
 115          
C51 COMPILER V9.51   MOTOR_EN                                                              05/11/2016 14:38:03 PAGE 3   

 116          /* If Interrupts Are Enabled for this Pins component */ 
 117          #if defined(MOTOR_EN_INTSTAT) 
              
                  /*******************************************************************************
                  * Function Name: MOTOR_EN_ClearInterrupt
                  ********************************************************************************
                  *
                  * Summary:
                  *  Clears any active interrupts attached to port and returns the value of the 
                  *  interrupt status register.
                  *
                  * Parameters:  
                  *  None 
                  *
                  * Return: 
                  *  Returns the value of the interrupt status register
                  *  
                  *******************************************************************************/
                  uint8 MOTOR_EN_ClearInterrupt(void) 
                  {
                      return (MOTOR_EN_INTSTAT & MOTOR_EN_MASK) >> MOTOR_EN_SHIFT;
                  }
              
              #endif /* If Interrupts Are Enabled for this Pins component */ 
 140          
 141          
 142          /* [] END OF FILE */
C51 COMPILER V9.51   MOTOR_EN                                                              05/11/2016 14:38:03 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _MOTOR_EN_Write (BEGIN)
                                           ; SOURCE LINE # 35
0000 900000      R     MOV     DPTR,#value
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 36
                                           ; SOURCE LINE # 37
0005 905110            MOV     DPTR,#05110H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 549F              ANL     A,#09FH
000D FF                MOV     R7,A
000E 900000      R     MOV     DPTR,#staticBits
0011 EF                MOV     A,R7
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 38
0013 900000      R     MOV     DPTR,#value
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 EF                MOV     A,R7
0019 C4                SWAP    A
001A 33                RLC     A
001B 54E0              ANL     A,#0E0H
001D FF                MOV     R7,A
001E EF                MOV     A,R7
001F 5460              ANL     A,#060H
0021 FF                MOV     R7,A
0022 900000      R     MOV     DPTR,#staticBits
0025 E0                MOVX    A,@DPTR
0026 FE                MOV     R6,A
0027 EF                MOV     A,R7
0028 4E                ORL     A,R6
0029 FF                MOV     R7,A
002A 905110            MOV     DPTR,#05110H
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 39
002F 22                RET     
             ; FUNCTION _MOTOR_EN_Write (END)

             ; FUNCTION _MOTOR_EN_SetDriveMode (BEGIN)
                                           ; SOURCE LINE # 65
0000 900000      R     MOV     DPTR,#mode
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 66
                                           ; SOURCE LINE # 67
0005 900000      R     MOV     DPTR,#mode
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 540E              ANL     A,#0EH
000D FF                MOV     R7,A
000E 90500D            MOV     DPTR,#0500DH
0011 E0                MOVX    A,@DPTR
0012 FE                MOV     R6,A
0013 EE                MOV     A,R6
0014 54F1              ANL     A,#0F1H
C51 COMPILER V9.51   MOTOR_EN                                                              05/11/2016 14:38:03 PAGE 5   

0016 FE                MOV     R6,A
0017 EE                MOV     A,R6
0018 4F                ORL     A,R7
0019 FF                MOV     R7,A
001A 90500D            MOV     DPTR,#0500DH
001D EF                MOV     A,R7
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 68
001F 900000      R     MOV     DPTR,#mode
0022 E0                MOVX    A,@DPTR
0023 FF                MOV     R7,A
0024 EF                MOV     A,R7
0025 540E              ANL     A,#0EH
0027 FF                MOV     R7,A
0028 90500E            MOV     DPTR,#0500EH
002B E0                MOVX    A,@DPTR
002C FE                MOV     R6,A
002D EE                MOV     A,R6
002E 54F1              ANL     A,#0F1H
0030 FE                MOV     R6,A
0031 EE                MOV     A,R6
0032 4F                ORL     A,R7
0033 FF                MOV     R7,A
0034 90500E            MOV     DPTR,#0500EH
0037 EF                MOV     A,R7
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 69
0039 22                RET     
             ; FUNCTION _MOTOR_EN_SetDriveMode (END)

             ; FUNCTION MOTOR_EN_Read (BEGIN)
                                           ; SOURCE LINE # 90
                                           ; SOURCE LINE # 91
                                           ; SOURCE LINE # 92
0000 905111            MOV     DPTR,#05111H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 5460              ANL     A,#060H
0008 FF                MOV     R7,A
0009 7E00              MOV     R6,#00H
000B EF                MOV     A,R7
000C 7805              MOV     R0,#05H
000E         ?C0005:
000E CE                XCH     A,R6
000F C3                CLR     C
0010 13                RRC     A
0011 CE                XCH     A,R6
0012 13                RRC     A
0013 D8F9              DJNZ    R0,?C0005
0015 FF                MOV     R7,A
                                           ; SOURCE LINE # 93
0016         ?C0003:
0016 22                RET     
             ; FUNCTION MOTOR_EN_Read (END)

             ; FUNCTION MOTOR_EN_ReadDataReg (BEGIN)
                                           ; SOURCE LINE # 110
                                           ; SOURCE LINE # 111
                                           ; SOURCE LINE # 112
0000 905110            MOV     DPTR,#05110H
0003 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   MOTOR_EN                                                              05/11/2016 14:38:03 PAGE 6   

0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 5460              ANL     A,#060H
0008 FF                MOV     R7,A
0009 7E00              MOV     R6,#00H
000B EF                MOV     A,R7
000C 7805              MOV     R0,#05H
000E         ?C0006:
000E CE                XCH     A,R6
000F C3                CLR     C
0010 13                RRC     A
0011 CE                XCH     A,R6
0012 13                RRC     A
0013 D8F9              DJNZ    R0,?C0006
0015 FF                MOV     R7,A
                                           ; SOURCE LINE # 113
0016         ?C0004:
0016 22                RET     
             ; FUNCTION MOTOR_EN_ReadDataReg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    152    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
