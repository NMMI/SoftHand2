C51 COMPILER V9.51   WATCHDOG_ENABLER_PM                                                   05/11/2016 14:38:14 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE WATCHDOG_ENABLER_PM
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Debug\WATCHDOG_ENABLER_PM.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\WATCHDOG_ENABLER_PM.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) 
                    -DB WL(2) PR(.\DP8051_Keil_951\Debug/WATCHDOG_ENABLER_PM.lst) CD OT(2,SIZE) OJ(.\DP8051_Keil_951\Debug\WATCHDOG_ENABLER_P
                    -M.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: WATCHDOG_ENABLER_PM.c
   3          * Version 1.80
   4          *
   5          * Description:
   6          *  This file contains the setup, control, and status commands to support 
   7          *  the component operation in the low power mode. 
   8          *
   9          * Note:
  10          *
  11          ********************************************************************************
  12          * Copyright 2015, Cypress Semiconductor Corporation.  All rights reserved.
  13          * You may use this file only in accordance with the license, terms, conditions, 
  14          * disclaimers, and limitations in the end user license agreement accompanying 
  15          * the software package with which this file was provided.
  16          *******************************************************************************/
  17          
  18          #include "WATCHDOG_ENABLER.h"
  19          
  20          /* Check for removal by optimization */
  21          #if !defined(WATCHDOG_ENABLER_Sync_ctrl_reg__REMOVED)
  22          
  23          static WATCHDOG_ENABLER_BACKUP_STRUCT  WATCHDOG_ENABLER_backup = {0u};
  24          
  25              
  26          /*******************************************************************************
  27          * Function Name: WATCHDOG_ENABLER_SaveConfig
  28          ********************************************************************************
  29          *
  30          * Summary:
  31          *  Saves the control register value.
  32          *
  33          * Parameters:
  34          *  None
  35          *
  36          * Return:
  37          *  None
  38          *
  39          *******************************************************************************/
  40          void WATCHDOG_ENABLER_SaveConfig(void) 
  41          {
  42   1          WATCHDOG_ENABLER_backup.controlState = WATCHDOG_ENABLER_Control;
  43   1      }
  44          
  45          
  46          /*******************************************************************************
  47          * Function Name: WATCHDOG_ENABLER_RestoreConfig
  48          ********************************************************************************
  49          *
  50          * Summary:
  51          *  Restores the control register value.
  52          *
C51 COMPILER V9.51   WATCHDOG_ENABLER_PM                                                   05/11/2016 14:38:14 PAGE 2   

  53          * Parameters:
  54          *  None
  55          *
  56          * Return:
  57          *  None
  58          *
  59          *
  60          *******************************************************************************/
  61          void WATCHDOG_ENABLER_RestoreConfig(void) 
  62          {
  63   1           WATCHDOG_ENABLER_Control = WATCHDOG_ENABLER_backup.controlState;
  64   1      }
  65          
  66          
  67          /*******************************************************************************
  68          * Function Name: WATCHDOG_ENABLER_Sleep
  69          ********************************************************************************
  70          *
  71          * Summary:
  72          *  Prepares the component for entering the low power mode.
  73          *
  74          * Parameters:
  75          *  None
  76          *
  77          * Return:
  78          *  None
  79          *
  80          *******************************************************************************/
  81          void WATCHDOG_ENABLER_Sleep(void) 
  82          {
  83   1          WATCHDOG_ENABLER_SaveConfig();
  84   1      }
  85          
  86          
  87          /*******************************************************************************
  88          * Function Name: WATCHDOG_ENABLER_Wakeup
  89          ********************************************************************************
  90          *
  91          * Summary:
  92          *  Restores the component after waking up from the low power mode.
  93          *
  94          * Parameters:
  95          *  None
  96          *
  97          * Return:
  98          *  None
  99          *
 100          *******************************************************************************/
 101          void WATCHDOG_ENABLER_Wakeup(void)  
 102          {
 103   1          WATCHDOG_ENABLER_RestoreConfig();
 104   1      }
 105          
 106          #endif /* End check for removal by optimization */
 107          
 108          
 109          /* [] END OF FILE */
C51 COMPILER V9.51   WATCHDOG_ENABLER_PM                                                   05/11/2016 14:38:14 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION WATCHDOG_ENABLER_SaveConfig (BEGIN)
                                           ; SOURCE LINE # 40
                                           ; SOURCE LINE # 41
                                           ; SOURCE LINE # 42
0000 906474            MOV     DPTR,#06474H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 900000      R     MOV     DPTR,#WATCHDOG_ENABLER_backup
0008 EF                MOV     A,R7
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 43
000A 22                RET     
             ; FUNCTION WATCHDOG_ENABLER_SaveConfig (END)

             ; FUNCTION WATCHDOG_ENABLER_RestoreConfig (BEGIN)
                                           ; SOURCE LINE # 61
                                           ; SOURCE LINE # 62
                                           ; SOURCE LINE # 63
0000 900000      R     MOV     DPTR,#WATCHDOG_ENABLER_backup
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 906474            MOV     DPTR,#06474H
0008 EF                MOV     A,R7
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 64
000A 22                RET     
             ; FUNCTION WATCHDOG_ENABLER_RestoreConfig (END)

             ; FUNCTION WATCHDOG_ENABLER_Sleep (BEGIN)
                                           ; SOURCE LINE # 81
                                           ; SOURCE LINE # 82
                                           ; SOURCE LINE # 83
0000 120000      R     LCALL   WATCHDOG_ENABLER_SaveConfig
                                           ; SOURCE LINE # 84
0003 22                RET     
             ; FUNCTION WATCHDOG_ENABLER_Sleep (END)

             ; FUNCTION WATCHDOG_ENABLER_Wakeup (BEGIN)
                                           ; SOURCE LINE # 101
                                           ; SOURCE LINE # 102
                                           ; SOURCE LINE # 103
0000 120000      R     LCALL   WATCHDOG_ENABLER_RestoreConfig
                                           ; SOURCE LINE # 104
0003 22                RET     
             ; FUNCTION WATCHDOG_ENABLER_Wakeup (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     30    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
C51 COMPILER V9.51   WATCHDOG_ENABLER_PM                                                   05/11/2016 14:38:14 PAGE 4   

   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
