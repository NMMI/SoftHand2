C51 COMPILER V9.51   MOTOR_1B                                                              05/11/2016 14:38:05 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE MOTOR_1B
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Debug\MOTOR_1B.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\MOTOR_1B.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB WL(2) PR
                    -(.\DP8051_Keil_951\Debug/MOTOR_1B.lst) CD OT(2,SIZE) OJ(.\DP8051_Keil_951\Debug\MOTOR_1B.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: MOTOR_1B.c  
   3          * Version 2.10
   4          *
   5          * Description:
   6          *  This file contains API to enable firmware control of a Pins component.
   7          *
   8          * Note:
   9          *
  10          ********************************************************************************
  11          * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions, 
  13          * disclaimers, and limitations in the end user license agreement accompanying 
  14          * the software package with which this file was provided.
  15          *******************************************************************************/
  16          
  17          #include "cytypes.h"
  18          #include "MOTOR_1B.h"
  19          
  20          
  21          /*******************************************************************************
  22          * Function Name: MOTOR_1B_Write
  23          ********************************************************************************
  24          *
  25          * Summary:
  26          *  Assign a new value to the digital port's data output register.  
  27          *
  28          * Parameters:  
  29          *  prtValue:  The value to be assigned to the Digital Port. 
  30          *
  31          * Return: 
  32          *  None 
  33          *  
  34          *******************************************************************************/
  35          void MOTOR_1B_Write(uint8 value) 
  36          {
  37   1          uint8 staticBits = (MOTOR_1B_DR & (uint8)(~MOTOR_1B_MASK));
  38   1          MOTOR_1B_DR = staticBits | ((uint8)(value << MOTOR_1B_SHIFT) & MOTOR_1B_MASK);
  39   1      }
  40          
  41          
  42          /*******************************************************************************
  43          * Function Name: MOTOR_1B_SetDriveMode
  44          ********************************************************************************
  45          *
  46          * Summary:
  47          *  Change the drive mode on the pins of the port.
  48          * 
  49          * Parameters:  
  50          *  mode:  Change the pins to one of the following drive modes.
  51          *
  52          *  MOTOR_1B_DM_STRONG     Strong Drive 
  53          *  MOTOR_1B_DM_OD_HI      Open Drain, Drives High 
C51 COMPILER V9.51   MOTOR_1B                                                              05/11/2016 14:38:05 PAGE 2   

  54          *  MOTOR_1B_DM_OD_LO      Open Drain, Drives Low 
  55          *  MOTOR_1B_DM_RES_UP     Resistive Pull Up 
  56          *  MOTOR_1B_DM_RES_DWN    Resistive Pull Down 
  57          *  MOTOR_1B_DM_RES_UPDWN  Resistive Pull Up/Down 
  58          *  MOTOR_1B_DM_DIG_HIZ    High Impedance Digital 
  59          *  MOTOR_1B_DM_ALG_HIZ    High Impedance Analog 
  60          *
  61          * Return: 
  62          *  None
  63          *
  64          *******************************************************************************/
  65          void MOTOR_1B_SetDriveMode(uint8 mode) 
  66          {
  67   1              CyPins_SetPinDriveMode(MOTOR_1B_0, mode);
  68   1      }
  69          
  70          
  71          /*******************************************************************************
  72          * Function Name: MOTOR_1B_Read
  73          ********************************************************************************
  74          *
  75          * Summary:
  76          *  Read the current value on the pins of the Digital Port in right justified 
  77          *  form.
  78          *
  79          * Parameters:  
  80          *  None 
  81          *
  82          * Return: 
  83          *  Returns the current value of the Digital Port as a right justified number
  84          *  
  85          * Note:
  86          *  Macro MOTOR_1B_ReadPS calls this function. 
  87          *  
  88          *******************************************************************************/
  89          uint8 MOTOR_1B_Read(void) 
  90          {
  91   1          return (MOTOR_1B_PS & MOTOR_1B_MASK) >> MOTOR_1B_SHIFT;
  92   1      }
  93          
  94          
  95          /*******************************************************************************
  96          * Function Name: MOTOR_1B_ReadDataReg
  97          ********************************************************************************
  98          *
  99          * Summary:
 100          *  Read the current value assigned to a Digital Port's data output register
 101          *
 102          * Parameters:  
 103          *  None 
 104          *
 105          * Return: 
 106          *  Returns the current value assigned to the Digital Port's data output register
 107          *  
 108          *******************************************************************************/
 109          uint8 MOTOR_1B_ReadDataReg(void) 
 110          {
 111   1          return (MOTOR_1B_DR & MOTOR_1B_MASK) >> MOTOR_1B_SHIFT;
 112   1      }
 113          
 114          
 115          /* If Interrupts Are Enabled for this Pins component */ 
C51 COMPILER V9.51   MOTOR_1B                                                              05/11/2016 14:38:05 PAGE 3   

 116          #if defined(MOTOR_1B_INTSTAT) 
              
                  /*******************************************************************************
                  * Function Name: MOTOR_1B_ClearInterrupt
                  ********************************************************************************
                  *
                  * Summary:
                  *  Clears any active interrupts attached to port and returns the value of the 
                  *  interrupt status register.
                  *
                  * Parameters:  
                  *  None 
                  *
                  * Return: 
                  *  Returns the value of the interrupt status register
                  *  
                  *******************************************************************************/
                  uint8 MOTOR_1B_ClearInterrupt(void) 
                  {
                      return (MOTOR_1B_INTSTAT & MOTOR_1B_MASK) >> MOTOR_1B_SHIFT;
                  }
              
              #endif /* If Interrupts Are Enabled for this Pins component */ 
 139          
 140          
 141          /* [] END OF FILE */
C51 COMPILER V9.51   MOTOR_1B                                                              05/11/2016 14:38:05 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _MOTOR_1B_Write (BEGIN)
                                           ; SOURCE LINE # 35
0000 900000      R     MOV     DPTR,#value
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 36
                                           ; SOURCE LINE # 37
0005 905110            MOV     DPTR,#05110H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 54FD              ANL     A,#0FDH
000D FF                MOV     R7,A
000E 900000      R     MOV     DPTR,#staticBits
0011 EF                MOV     A,R7
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 38
0013 900000      R     MOV     DPTR,#value
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 EF                MOV     A,R7
0019 25E0              ADD     A,ACC
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D 5402              ANL     A,#02H
001F FF                MOV     R7,A
0020 900000      R     MOV     DPTR,#staticBits
0023 E0                MOVX    A,@DPTR
0024 FE                MOV     R6,A
0025 EF                MOV     A,R7
0026 4E                ORL     A,R6
0027 FF                MOV     R7,A
0028 905110            MOV     DPTR,#05110H
002B EF                MOV     A,R7
002C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 39
002D 22                RET     
             ; FUNCTION _MOTOR_1B_Write (END)

             ; FUNCTION _MOTOR_1B_SetDriveMode (BEGIN)
                                           ; SOURCE LINE # 65
0000 900000      R     MOV     DPTR,#mode
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 66
                                           ; SOURCE LINE # 67
0005 900000      R     MOV     DPTR,#mode
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 540E              ANL     A,#0EH
000D FF                MOV     R7,A
000E 905009            MOV     DPTR,#05009H
0011 E0                MOVX    A,@DPTR
0012 FE                MOV     R6,A
0013 EE                MOV     A,R6
0014 54F1              ANL     A,#0F1H
0016 FE                MOV     R6,A
0017 EE                MOV     A,R6
C51 COMPILER V9.51   MOTOR_1B                                                              05/11/2016 14:38:05 PAGE 5   

0018 4F                ORL     A,R7
0019 FF                MOV     R7,A
001A 905009            MOV     DPTR,#05009H
001D EF                MOV     A,R7
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 68
001F 22                RET     
             ; FUNCTION _MOTOR_1B_SetDriveMode (END)

             ; FUNCTION MOTOR_1B_Read (BEGIN)
                                           ; SOURCE LINE # 89
                                           ; SOURCE LINE # 90
                                           ; SOURCE LINE # 91
0000 905111            MOV     DPTR,#05111H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 5402              ANL     A,#02H
0008 FF                MOV     R7,A
0009 7E00              MOV     R6,#00H
000B EE                MOV     A,R6
000C C3                CLR     C
000D 13                RRC     A
000E FE                MOV     R6,A
000F EF                MOV     A,R7
0010 13                RRC     A
0011 FF                MOV     R7,A
                                           ; SOURCE LINE # 92
0012         ?C0003:
0012 22                RET     
             ; FUNCTION MOTOR_1B_Read (END)

             ; FUNCTION MOTOR_1B_ReadDataReg (BEGIN)
                                           ; SOURCE LINE # 109
                                           ; SOURCE LINE # 110
                                           ; SOURCE LINE # 111
0000 905110            MOV     DPTR,#05110H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 5402              ANL     A,#02H
0008 FF                MOV     R7,A
0009 7E00              MOV     R6,#00H
000B EE                MOV     A,R6
000C C3                CLR     C
000D 13                RRC     A
000E FE                MOV     R6,A
000F EF                MOV     A,R7
0010 13                RRC     A
0011 FF                MOV     R7,A
                                           ; SOURCE LINE # 112
0012         ?C0004:
0012 22                RET     
             ; FUNCTION MOTOR_1B_ReadDataReg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    116    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       3
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.51   MOTOR_1B                                                              05/11/2016 14:38:05 PAGE 6   

   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
