C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE CYFITTER_CFG
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Debug\cyfitter_cfg.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\cyfitter_cfg.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB WL(2
                    -) PR(.\DP8051_Keil_951\Debug/cyfitter_cfg.lst) CD OT(2,SIZE) DF(CYAPP_ECC_OFFSET=1216) OJ(.\DP8051_Keil_951\Debug\cyfitt
                    -er_cfg.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: cyfitter_cfg.c
   3          * 
   4          * PSoC Creator  3.3 CP1
   5          *
   6          * Description:
   7          * This file contains device initialization code.
   8          * Except for the user defined sections in CyClockStartupError(), this file should not be modified.
   9          * This file is automatically generated by PSoC Creator.
  10          *
  11          ********************************************************************************
  12          * Copyright (c) 2007-2015 Cypress Semiconductor.  All rights reserved.
  13          * You may use this file only in accordance with the license, terms, conditions, 
  14          * disclaimers, and limitations in the end user license agreement accompanying 
  15          * the software package with which this file was provided.
  16          ********************************************************************************/
  17          
  18          #include <string.h>
  19          #include "cytypes.h"
  20          #include "cydevice_trm.h"
  21          #include "cyfitter.h"
  22          #include "CyLib.h"
  23          #include "cyfitter_cfg.h"
  24          
  25          #define CY_NEED_CYCLOCKSTARTUPERROR 1
  26          
  27          
  28          #if defined(__C51__) || defined(__CX51__)
  29                  #define CYPACKED
  30                  #define CYPACKED_ATTR
  31                  #define CYALIGNED
  32                  #define DMAINITSEC
  33              #define CY_CFG_UNUSED
  34                  #define CY_CFG_MEMORY_BARRIER() do { } while (0)
  35          
  36          
  37          
  38                  #define CYMEMZERO(a,c) cymemzero((a),(c))
  39                  #define CYCONFIGCPY(d,s,c) cyconfigcpy((c),(s),(d))
  40                  #define CYCONFIGCPYCODE(d,s,c) cyconfigcpycode((c),(s),(d))
  41          #else
                      #error Unsupported toolchain
              #endif
  44          
  45          
  46          
  47          /* Clock startup error codes                                                   */
  48          #define CYCLOCKSTART_NO_ERROR    0u
  49          #define CYCLOCKSTART_XTAL_ERROR  1u
  50          #define CYCLOCKSTART_32KHZ_ERROR 2u
  51          #define CYCLOCKSTART_PLL_ERROR   3u
  52          
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 2   

  53          #ifdef CY_NEED_CYCLOCKSTARTUPERROR
  54          /*******************************************************************************
  55          * Function Name: CyClockStartupError
  56          ********************************************************************************
  57          * Summary:
  58          *  If an error is encountered during clock configuration (crystal startup error,
  59          *  PLL lock error, etc.), the system will end up here.  Unless reimplemented by
  60          *  the customer, this function will stop in an infinite loop.
  61          *
  62          * Parameters:
  63          *   void
  64          *
  65          * Return:
  66          *   void
  67          *
  68          *******************************************************************************/
  69          CY_CFG_UNUSED
  70          static void CyClockStartupError(uint8 errorCode);
  71          CY_CFG_UNUSED
  72          static void CyClockStartupError(uint8 errorCode)
  73          {
  74   1          /* To remove the compiler warning if errorCode not used.                */
  75   1          errorCode = errorCode;
  76   1      
  77   1          /* `#START CyClockStartupError` */
  78   1      
  79   1          /* If we have a clock startup error (bad MHz crystal, PLL lock, etc.),  */
  80   1          /* we will end up here to allow the customer to implement something to  */
  81   1          /* deal with the clock condition.                                       */
  82   1      
  83   1          /* `#END` */
  84   1      
  85   1          /* If nothing else, stop here since the clocks have not started         */
  86   1          /* correctly.                                                           */
  87   1          while(1) {}
  88   1      }
  89          #endif
  90          
  91          /* IDMUX Address: CYREG_IDMUX_DRQ_CTL0 Size (bytes): 6 */
  92          #define BS_IDMUX_VAL ((const uint8 CYFAR *)(0x00080000u + CYAPP_ECC_OFFSET))
  93          
  94          /* IOPORT_0 Address: CYDEV_PRTDSI_PRT0_BASE Size (bytes): 7 */
  95          #define BS_IOPORT_0_VAL ((const uint8 CYFAR *)(0x00080008u + CYAPP_ECC_OFFSET))
  96          
  97          /* IOPORT_1 Address: CYDEV_PRTDSI_PRT1_BASE Size (bytes): 7 */
  98          #define BS_IOPORT_1_VAL ((const uint8 CYFAR *)(0x00080010u + CYAPP_ECC_OFFSET))
  99          
 100          /* IOPORT_2 Address: CYDEV_PRTDSI_PRT2_BASE Size (bytes): 7 */
 101          #define BS_IOPORT_2_VAL ((const uint8 CYFAR *)(0x00080018u + CYAPP_ECC_OFFSET))
 102          
 103          /* IOPORT_7 Address: CYDEV_PRTDSI_PRT12_BASE Size (bytes): 6 */
 104          #define BS_IOPORT_7_VAL ((const uint8 CYFAR *)(0x00080020u + CYAPP_ECC_OFFSET))
 105          
 106          /* IOPORT_8 Address: CYDEV_PRTDSI_PRT15_BASE Size (bytes): 7 */
 107          #define BS_IOPORT_8_VAL ((const uint8 CYFAR *)(0x00080028u + CYAPP_ECC_OFFSET))
 108          
 109          /* IDMUX_IRQ Address: CYREG_IDMUX_IRQ_CTL0 Size (bytes): 8 */
 110          #define BS_IDMUX_IRQ_VAL ((const uint8 CYFAR *)(0x00080030u + CYAPP_ECC_OFFSET))
 111          
 112          /* TMR0 Address: CYREG_TMR0_CFG0 Size (bytes): 12 */
 113          #define BS_TMR0_VAL ((const uint8 CYFAR *)(0x00080038u + CYAPP_ECC_OFFSET))
 114          
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 3   

 115          /* TMR1 Address: CYREG_TMR1_CFG0 Size (bytes): 12 */
 116          #define BS_TMR1_VAL ((const uint8 CYFAR *)(0x00080044u + CYAPP_ECC_OFFSET))
 117          
 118          /* UDB_1_5_0_CONFIG Address: CYDEV_UCFG_B0_P0_U0_BASE Size (bytes): 128 */
 119          #define BS_UDB_1_5_0_CONFIG_VAL ((const uint8 CYFAR *)(0x00080050u + CYAPP_ECC_OFFSET))
 120          
 121          /* UDB_1_5_1_CONFIG Address: CYDEV_UCFG_B0_P0_U1_BASE Size (bytes): 128 */
 122          #define BS_UDB_1_5_1_CONFIG_VAL ((const uint8 CYFAR *)(0x000800D0u + CYAPP_ECC_OFFSET))
 123          
 124          /* UDB_1_4_1_CONFIG Address: CYDEV_UCFG_B0_P1_U0_BASE Size (bytes): 128 */
 125          #define BS_UDB_1_4_1_CONFIG_VAL ((const uint8 CYFAR *)(0x00080150u + CYAPP_ECC_OFFSET))
 126          
 127          /* UDB_1_4_0_CONFIG Address: CYDEV_UCFG_B0_P1_U1_BASE Size (bytes): 128 */
 128          #define BS_UDB_1_4_0_CONFIG_VAL ((const uint8 CYFAR *)(0x000801D0u + CYAPP_ECC_OFFSET))
 129          
 130          /* UDB_1_3_0_CONFIG Address: CYDEV_UCFG_B0_P2_U0_BASE Size (bytes): 128 */
 131          #define BS_UDB_1_3_0_CONFIG_VAL ((const uint8 CYFAR *)(0x00080250u + CYAPP_ECC_OFFSET))
 132          
 133          /* UDB_1_3_1_CONFIG Address: CYDEV_UCFG_B0_P2_U1_BASE Size (bytes): 128 */
 134          #define BS_UDB_1_3_1_CONFIG_VAL ((const uint8 CYFAR *)(0x000802D0u + CYAPP_ECC_OFFSET))
 135          
 136          /* UDB_1_2_1_CONFIG Address: CYDEV_UCFG_B0_P3_U0_BASE Size (bytes): 128 */
 137          #define BS_UDB_1_2_1_CONFIG_VAL ((const uint8 CYFAR *)(0x00080350u + CYAPP_ECC_OFFSET))
 138          
 139          /* UDB_1_2_0_CONFIG Address: CYDEV_UCFG_B0_P3_U1_BASE Size (bytes): 128 */
 140          #define BS_UDB_1_2_0_CONFIG_VAL ((const uint8 CYFAR *)(0x000803D0u + CYAPP_ECC_OFFSET))
 141          
 142          /* UDB_0_2_1_CONFIG Address: CYDEV_UCFG_B0_P4_U0_BASE Size (bytes): 128 */
 143          #define BS_UDB_0_2_1_CONFIG_VAL ((const uint8 CYFAR *)(0x00080450u + CYAPP_ECC_OFFSET))
 144          
 145          /* UDB_0_2_0_CONFIG Address: CYDEV_UCFG_B0_P4_U1_BASE Size (bytes): 128 */
 146          #define BS_UDB_0_2_0_CONFIG_VAL ((const uint8 CYFAR *)(0x000804D0u + CYAPP_ECC_OFFSET))
 147          
 148          /* UDB_0_3_0_CONFIG Address: CYDEV_UCFG_B0_P5_U0_BASE Size (bytes): 128 */
 149          #define BS_UDB_0_3_0_CONFIG_VAL ((const uint8 CYFAR *)(0x00080550u + CYAPP_ECC_OFFSET))
 150          
 151          /* UDB_0_3_1_CONFIG Address: CYDEV_UCFG_B0_P5_U1_BASE Size (bytes): 128 */
 152          #define BS_UDB_0_3_1_CONFIG_VAL ((const uint8 CYFAR *)(0x000805D0u + CYAPP_ECC_OFFSET))
 153          
 154          /* UDB_0_4_1_CONFIG Address: CYDEV_UCFG_B0_P6_U0_BASE Size (bytes): 128 */
 155          #define BS_UDB_0_4_1_CONFIG_VAL ((const uint8 CYFAR *)(0x00080650u + CYAPP_ECC_OFFSET))
 156          
 157          /* UDB_0_4_0_CONFIG Address: CYDEV_UCFG_B0_P6_U1_BASE Size (bytes): 128 */
 158          #define BS_UDB_0_4_0_CONFIG_VAL ((const uint8 CYFAR *)(0x000806D0u + CYAPP_ECC_OFFSET))
 159          
 160          /* UDB_0_5_0_CONFIG Address: CYDEV_UCFG_B0_P7_U0_BASE Size (bytes): 128 */
 161          #define BS_UDB_0_5_0_CONFIG_VAL ((const uint8 CYFAR *)(0x00080750u + CYAPP_ECC_OFFSET))
 162          
 163          /* UDB_0_5_1_CONFIG Address: CYDEV_UCFG_B0_P7_U1_BASE Size (bytes): 128 */
 164          #define BS_UDB_0_5_1_CONFIG_VAL ((const uint8 CYFAR *)(0x000807D0u + CYAPP_ECC_OFFSET))
 165          
 166          /* UDB_1_0_0_CONFIG Address: CYDEV_UCFG_B1_P2_U0_BASE Size (bytes): 128 */
 167          #define BS_UDB_1_0_0_CONFIG_VAL ((const uint8 CYFAR *)(0x00080850u + CYAPP_ECC_OFFSET))
 168          
 169          /* UDB_1_0_1_CONFIG Address: CYDEV_UCFG_B1_P2_U1_BASE Size (bytes): 128 */
 170          #define BS_UDB_1_0_1_CONFIG_VAL ((const uint8 CYFAR *)(0x000808D0u + CYAPP_ECC_OFFSET))
 171          
 172          /* UDB_1_1_1_CONFIG Address: CYDEV_UCFG_B1_P3_U0_BASE Size (bytes): 128 */
 173          #define BS_UDB_1_1_1_CONFIG_VAL ((const uint8 CYFAR *)(0x00080950u + CYAPP_ECC_OFFSET))
 174          
 175          /* UDB_1_1_0_CONFIG Address: CYDEV_UCFG_B1_P3_U1_BASE Size (bytes): 128 */
 176          #define BS_UDB_1_1_0_CONFIG_VAL ((const uint8 CYFAR *)(0x000809D0u + CYAPP_ECC_OFFSET))
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 4   

 177          
 178          /* UDB_0_1_1_CONFIG Address: CYDEV_UCFG_B1_P4_U0_BASE Size (bytes): 128 */
 179          #define BS_UDB_0_1_1_CONFIG_VAL ((const uint8 CYFAR *)(0x00080A50u + CYAPP_ECC_OFFSET))
 180          
 181          /* UDB_0_1_0_CONFIG Address: CYDEV_UCFG_B1_P4_U1_BASE Size (bytes): 128 */
 182          #define BS_UDB_0_1_0_CONFIG_VAL ((const uint8 CYFAR *)(0x00080AD0u + CYAPP_ECC_OFFSET))
 183          
 184          /* UDB_0_0_0_CONFIG Address: CYDEV_UCFG_B1_P5_U0_BASE Size (bytes): 128 */
 185          #define BS_UDB_0_0_0_CONFIG_VAL ((const uint8 CYFAR *)(0x00080B50u + CYAPP_ECC_OFFSET))
 186          
 187          /* UDB_0_0_1_CONFIG Address: CYDEV_UCFG_B1_P5_U1_BASE Size (bytes): 128 */
 188          #define BS_UDB_0_0_1_CONFIG_VAL ((const uint8 CYFAR *)(0x00080BD0u + CYAPP_ECC_OFFSET))
 189          
 190          /* UWRK_B0_WRK_STATCTL_BITS Address: CYDEV_UWRK_UWRK8_B0_BASE + 0x00000070u Size (bytes): 32 */
 191          #define BS_UWRK_B0_WRK_STATCTL_BITS_VAL ((const uint8 CYFAR *)(0x00080C50u + CYAPP_ECC_OFFSET))
 192          
 193          /* UWRK_B1_WRK_STATCTL_BITS Address: CYDEV_UWRK_UWRK8_B1_BASE + 0x00000070u Size (bytes): 32 */
 194          #define BS_UWRK_B1_WRK_STATCTL_BITS_VAL ((const uint8 CYFAR *)(0x00080C70u + CYAPP_ECC_OFFSET))
 195          
 196          /* UCFG_BCTL1 Address: CYREG_BCTL1_MDCLK_EN Size (bytes): 16 */
 197          #define BS_UCFG_BCTL1_VAL ((const uint8 CYFAR *)(0x00080C90u + CYAPP_ECC_OFFSET))
 198          
 199          /* UCFG_BCTL0 Address: CYREG_BCTL0_MDCLK_EN Size (bytes): 16 */
 200          #define BS_UCFG_BCTL0_VAL ((const uint8 CYFAR *)(0x00080CA0u + CYAPP_ECC_OFFSET))
 201          
 202          /* DSI0_0_HV_ROUTING Address: CYDEV_UCFG_DSI13_BASE + 0x00000080u Size (bytes): 128 */
 203          #define BS_DSI0_0_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00080CB0u + CYAPP_ECC_OFFSET))
 204          
 205          /* DSISWITCH_0_1 Address: CYDEV_UCFG_DSI12_BASE Size (bytes): 128 */
 206          #define BS_DSISWITCH_0_1_VAL ((const uint8 CYFAR *)(0x00080D30u + CYAPP_ECC_OFFSET))
 207          
 208          /* DSI0_1_HV_ROUTING Address: CYDEV_UCFG_DSI12_BASE + 0x00000080u Size (bytes): 128 */
 209          #define BS_DSI0_1_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00080DB0u + CYAPP_ECC_OFFSET))
 210          
 211          /* DSI0_2_HV_ROUTING Address: CYDEV_UCFG_DSI7_BASE + 0x00000080u Size (bytes): 128 */
 212          #define BS_DSI0_2_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00080E30u + CYAPP_ECC_OFFSET))
 213          
 214          /* DSISWITCH_0_3 Address: CYDEV_UCFG_DSI6_BASE Size (bytes): 128 */
 215          #define BS_DSISWITCH_0_3_VAL ((const uint8 CYFAR *)(0x00080EB0u + CYAPP_ECC_OFFSET))
 216          
 217          /* DSI0_3_HV_ROUTING Address: CYDEV_UCFG_DSI6_BASE + 0x00000080u Size (bytes): 128 */
 218          #define BS_DSI0_3_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00080F30u + CYAPP_ECC_OFFSET))
 219          
 220          /* DSISWITCH_0_4 Address: CYDEV_UCFG_DSI5_BASE Size (bytes): 128 */
 221          #define BS_DSISWITCH_0_4_VAL ((const uint8 CYFAR *)(0x00080FB0u + CYAPP_ECC_OFFSET))
 222          
 223          /* DSI0_4_HV_ROUTING Address: CYDEV_UCFG_DSI5_BASE + 0x00000080u Size (bytes): 128 */
 224          #define BS_DSI0_4_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00081030u + CYAPP_ECC_OFFSET))
 225          
 226          /* DSISWITCH_0_5 Address: CYDEV_UCFG_DSI4_BASE Size (bytes): 128 */
 227          #define BS_DSISWITCH_0_5_VAL ((const uint8 CYFAR *)(0x000810B0u + CYAPP_ECC_OFFSET))
 228          
 229          /* DSI0_5_HV_ROUTING Address: CYDEV_UCFG_DSI4_BASE + 0x00000080u Size (bytes): 128 */
 230          #define BS_DSI0_5_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00081130u + CYAPP_ECC_OFFSET))
 231          
 232          /* UDBSWITCH_0_0 Address: CYDEV_UCFG_B1_P5_ROUTE_BASE Size (bytes): 128 */
 233          #define BS_UDBSWITCH_0_0_VAL ((const uint8 CYFAR *)(0x000811B0u + CYAPP_ECC_OFFSET))
 234          
 235          /* UDB_1_0_HV_ROUTING Address: CYDEV_UCFG_B1_P5_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 236          #define BS_UDB_1_0_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00081230u + CYAPP_ECC_OFFSET))
 237          
 238          /* UDBSWITCH_1_0 Address: CYDEV_UCFG_B1_P2_ROUTE_BASE Size (bytes): 128 */
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 5   

 239          #define BS_UDBSWITCH_1_0_VAL ((const uint8 CYFAR *)(0x000812B0u + CYAPP_ECC_OFFSET))
 240          
 241          /* UDB_2_0_HV_ROUTING Address: CYDEV_UCFG_B1_P2_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 242          #define BS_UDB_2_0_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00081330u + CYAPP_ECC_OFFSET))
 243          
 244          /* UDBSWITCH_0_1 Address: CYDEV_UCFG_B1_P4_ROUTE_BASE Size (bytes): 128 */
 245          #define BS_UDBSWITCH_0_1_VAL ((const uint8 CYFAR *)(0x000813B0u + CYAPP_ECC_OFFSET))
 246          
 247          /* UDB_1_1_HV_ROUTING Address: CYDEV_UCFG_B1_P4_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 248          #define BS_UDB_1_1_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00081430u + CYAPP_ECC_OFFSET))
 249          
 250          /* UDBSWITCH_1_1 Address: CYDEV_UCFG_B1_P3_ROUTE_BASE Size (bytes): 128 */
 251          #define BS_UDBSWITCH_1_1_VAL ((const uint8 CYFAR *)(0x000814B0u + CYAPP_ECC_OFFSET))
 252          
 253          /* UDB_2_1_HV_ROUTING Address: CYDEV_UCFG_B1_P3_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 254          #define BS_UDB_2_1_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00081530u + CYAPP_ECC_OFFSET))
 255          
 256          /* UDBSWITCH_0_2 Address: CYDEV_UCFG_B0_P4_ROUTE_BASE Size (bytes): 128 */
 257          #define BS_UDBSWITCH_0_2_VAL ((const uint8 CYFAR *)(0x000815B0u + CYAPP_ECC_OFFSET))
 258          
 259          /* UDB_1_2_HV_ROUTING Address: CYDEV_UCFG_B0_P4_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 260          #define BS_UDB_1_2_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00081630u + CYAPP_ECC_OFFSET))
 261          
 262          /* UDBSWITCH_1_2 Address: CYDEV_UCFG_B0_P3_ROUTE_BASE Size (bytes): 128 */
 263          #define BS_UDBSWITCH_1_2_VAL ((const uint8 CYFAR *)(0x000816B0u + CYAPP_ECC_OFFSET))
 264          
 265          /* UDB_2_2_HV_ROUTING Address: CYDEV_UCFG_B0_P3_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 266          #define BS_UDB_2_2_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00081730u + CYAPP_ECC_OFFSET))
 267          
 268          /* UDBSWITCH_0_3 Address: CYDEV_UCFG_B0_P5_ROUTE_BASE Size (bytes): 128 */
 269          #define BS_UDBSWITCH_0_3_VAL ((const uint8 CYFAR *)(0x000817B0u + CYAPP_ECC_OFFSET))
 270          
 271          /* UDB_1_3_HV_ROUTING Address: CYDEV_UCFG_B0_P5_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 272          #define BS_UDB_1_3_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00081830u + CYAPP_ECC_OFFSET))
 273          
 274          /* UDBSWITCH_1_3 Address: CYDEV_UCFG_B0_P2_ROUTE_BASE Size (bytes): 128 */
 275          #define BS_UDBSWITCH_1_3_VAL ((const uint8 CYFAR *)(0x000818B0u + CYAPP_ECC_OFFSET))
 276          
 277          /* UDB_2_3_HV_ROUTING Address: CYDEV_UCFG_B0_P2_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 278          #define BS_UDB_2_3_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00081930u + CYAPP_ECC_OFFSET))
 279          
 280          /* UDBSWITCH_0_4 Address: CYDEV_UCFG_B0_P6_ROUTE_BASE Size (bytes): 128 */
 281          #define BS_UDBSWITCH_0_4_VAL ((const uint8 CYFAR *)(0x000819B0u + CYAPP_ECC_OFFSET))
 282          
 283          /* UDB_1_4_HV_ROUTING Address: CYDEV_UCFG_B0_P6_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 284          #define BS_UDB_1_4_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00081A30u + CYAPP_ECC_OFFSET))
 285          
 286          /* UDBSWITCH_1_4 Address: CYDEV_UCFG_B0_P1_ROUTE_BASE Size (bytes): 128 */
 287          #define BS_UDBSWITCH_1_4_VAL ((const uint8 CYFAR *)(0x00081AB0u + CYAPP_ECC_OFFSET))
 288          
 289          /* IOPINS0_0 Address: CYREG_PRT0_DR Size (bytes): 10 */
 290          #define BS_IOPINS0_0_VAL ((const uint8 CYFAR *)(0x00081B30u + CYAPP_ECC_OFFSET))
 291          
 292          
 293          /*******************************************************************************
 294          * Function Name: cfg_dma_init
 295          ********************************************************************************
 296          * Summary:
 297          *  This function is used to copy device configuration data from constant values
 298          *  stored in memory into the proper chip configuration registers using DMA.  It
 299          *  pulls data out of the CFG_TD_LISTs to know exactly how/what to configure.
 300          *
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 6   

 301          * Parameters:  
 302          *   void
 303          *
 304          * Return:
 305          *   void
 306          *
 307          *******************************************************************************/
 308          static void cfg_dma_init(void);
 309          static void cfg_dma_init(void)
 310          {
 311   1              /* TD structure for big-endian systems. Requires 2-byte endian swap */
 312   1              CYPACKED struct td_t {
 313   1                      uint16 size;
 314   1                      uint8 flags;
 315   1                      uint8 next_td_ptr;
 316   1                      uint16 src;
 317   1                      uint16 dest;
 318   1              } CYPACKED_ATTR;
 319   1      
 320   1              /* UDB_2_4_HV_ROUTING Address: CYDEV_UCFG_B0_P1_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 321   1              DMAINITSEC static const uint8 CYCODE BS_UDB_2_4_HV_ROUTING_VAL[] = {
 322   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x00u, 0x04u, 0x00u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u,
             - 0x00u, 
 323   1                      0x00u, 0x00u, 0x01u, 0x01u, 0x00u, 0x00u, 0x48u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x80u, 0x01u, 0x00u,
             - 0x80u, 
 324   1                      0x00u, 0x02u, 0x02u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x40u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 325   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 326   1                      0x00u, 0x00u, 0x91u, 0x00u, 0x81u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x19u, 0x00u, 0x93u, 0x00u, 0x80u,
             - 0x00u, 
 327   1                      0xC3u, 0x00u, 0x18u, 0x00u, 0x00u, 0x00u, 0x30u, 0x00u, 0x30u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x24u,
             - 0x00u, 
 328   1                      0x00u, 0x00u, 0x02u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 329   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 330   1      
 331   1              /* UDBSWITCH_0_5 Address: CYDEV_UCFG_B0_P7_ROUTE_BASE Size (bytes): 128 */
 332   1              DMAINITSEC static const uint8 CYCODE BS_UDBSWITCH_0_5_VAL[] = {
 333   1                      0x00u, 0x20u, 0x01u, 0x20u, 0x08u, 0x10u, 0x02u, 0x00u, 0x00u, 0x20u, 0x02u, 0x00u, 0x02u, 0x00u, 0x08u,
             - 0x00u, 
 334   1                      0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0xA4u, 0x40u, 0x08u, 0x20u, 0x00u, 0x00u, 0x00u, 0x00u, 0x08u,
             - 0xE0u, 
 335   1                      0x00u, 0x20u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x64u, 0x84u, 0x80u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 336   1                      0x02u, 0x18u, 0x01u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x24u, 0x10u, 0x62u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 337   1                      0x0Au, 0x00u, 0x00u, 0x01u, 0x0Au, 0x00u, 0x00u, 0x21u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x05u, 
 338   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x80u, 0x00u, 0x08u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x01u, 0x00u,
             - 0x20u, 
 339   1                      0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x08u, 0x05u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 340   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x01u, 0x00u, 0x80u, 0x00u, 0x00u, 0x00u, 0x80u,
             - 0x00u};
 341   1      
 342   1              /* UDB_1_5_HV_ROUTING Address: CYDEV_UCFG_B0_P7_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 343   1              DMAINITSEC static const uint8 CYCODE BS_UDB_1_5_HV_ROUTING_VAL[] = {
 344   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x40u,
             - 0x00u, 
 345   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 7   

             - 0x00u, 
 346   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 347   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 348   1                      0xE7u, 0x00u, 0x53u, 0x00u, 0xF2u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x0Fu, 0x00u, 0x0Fu, 0x00u, 0x0Fu,
             - 0x00u, 
 349   1                      0xBDu, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0xA8u, 0x00u, 0x78u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x81u,
             - 0x00u, 
 350   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 351   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 352   1      
 353   1              /* UDBSWITCH_1_5 Address: CYDEV_UCFG_B0_P0_ROUTE_BASE Size (bytes): 128 */
 354   1              DMAINITSEC static const uint8 CYCODE BS_UDBSWITCH_1_5_VAL[] = {
 355   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x49u, 0x00u, 0x00u, 0x02u, 0x00u,
             - 0x01u, 
 356   1                      0x00u, 0x00u, 0x02u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x40u, 0x01u,
             - 0x00u, 
 357   1                      0x00u, 0x00u, 0x10u, 0x00u, 0x00u, 0x02u, 0x02u, 0x00u, 0x00u, 0x41u, 0x00u, 0x00u, 0x00u, 0x00u, 0x01u,
             - 0x00u, 
 358   1                      0x00u, 0x02u, 0x04u, 0x00u, 0x00u, 0x00u, 0x02u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x01u, 
 359   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 360   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x80u, 0x80u, 0x00u, 0x00u,
             - 0x00u, 
 361   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x03u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 362   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x01u};
 363   1      
 364   1              /* UDB_2_5_HV_ROUTING Address: CYDEV_UCFG_B0_P0_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 365   1              DMAINITSEC static const uint8 CYCODE BS_UDB_2_5_HV_ROUTING_VAL[] = {
 366   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 367   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 368   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 369   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 370   1                      0x80u, 0x00u, 0x9Bu, 0x00u, 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x89u, 0x00u, 0x83u, 0x00u, 0x80u,
             - 0x00u, 
 371   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x18u, 0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x10u,
             - 0x00u, 
 372   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 373   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 374   1      
 375   1              /* DSI3_0_HV_ROUTING Address: CYDEV_UCFG_DSI9_BASE + 0x00000080u Size (bytes): 128 */
 376   1              DMAINITSEC static const uint8 CYCODE BS_DSI3_0_HV_ROUTING_VAL[] = {
 377   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 378   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 379   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x80u, 0x00u, 0x00u, 0x00u, 0x00u, 0x08u, 0x00u,
             - 0x00u, 
 380   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x02u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 8   

 381   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 382   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 383   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x20u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 384   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 385   1      
 386   1              /* DSISWITCH_1_1 Address: CYDEV_UCFG_DSI8_BASE Size (bytes): 128 */
 387   1              DMAINITSEC static const uint8 CYCODE BS_DSISWITCH_1_1_VAL[] = {
 388   1                      0x00u, 0x00u, 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 389   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 390   1                      0x00u, 0x00u, 0x00u, 0x80u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 391   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 392   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 393   1                      0x20u, 0x00u, 0x00u, 0x00u, 0x00u, 0x08u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 394   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x01u, 0x00u, 0x00u, 0x02u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 395   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 396   1      
 397   1              /* DSI3_1_HV_ROUTING Address: CYDEV_UCFG_DSI8_BASE + 0x00000080u Size (bytes): 128 */
 398   1              DMAINITSEC static const uint8 CYCODE BS_DSI3_1_HV_ROUTING_VAL[] = {
 399   1                      0x00u, 0x00u, 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x20u, 0x01u, 0x00u,
             - 0x00u, 
 400   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x80u, 
 401   1                      0x80u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 402   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x80u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 403   1                      0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 404   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x60u, 0x00u, 0x00u, 0x00u, 0x80u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 405   1                      0x20u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 406   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 407   1      
 408   1              /* DSISWITCH_1_2 Address: CYDEV_UCFG_DSI3_BASE Size (bytes): 128 */
 409   1              DMAINITSEC static const uint8 CYCODE BS_DSISWITCH_1_2_VAL[] = {
 410   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 411   1                      0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 412   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 413   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 414   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 415   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 416   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 9   

             - 0x00u, 
 417   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 418   1      
 419   1              /* DSI3_2_HV_ROUTING Address: CYDEV_UCFG_DSI3_BASE + 0x00000080u Size (bytes): 128 */
 420   1              DMAINITSEC static const uint8 CYCODE BS_DSI3_2_HV_ROUTING_VAL[] = {
 421   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x80u, 0x00u,
             - 0x00u, 
 422   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x80u, 0x00u,
             - 0x00u, 
 423   1                      0x80u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 424   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 425   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 426   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 427   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 428   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 429   1      
 430   1              /* DSISWITCH_1_3 Address: CYDEV_UCFG_DSI2_BASE Size (bytes): 128 */
 431   1              DMAINITSEC static const uint8 CYCODE BS_DSISWITCH_1_3_VAL[] = {
 432   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 433   1                      0x80u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 434   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 435   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 436   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u,
             - 0x40u, 
 437   1                      0x00u, 0x00u, 0x80u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x01u, 
 438   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 439   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 440   1      
 441   1              /* DSI3_3_HV_ROUTING Address: CYDEV_UCFG_DSI2_BASE + 0x00000080u Size (bytes): 128 */
 442   1              DMAINITSEC static const uint8 CYCODE BS_DSI3_3_HV_ROUTING_VAL[] = {
 443   1                      0x00u, 0x00u, 0x00u, 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x40u, 0x04u, 0x00u, 0x00u,
             - 0x00u, 
 444   1                      0x04u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x80u, 0x00u,
             - 0x00u, 
 445   1                      0x00u, 0x00u, 0x80u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x60u, 
 446   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x80u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 447   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 448   1                      0x00u, 0x00u, 0x20u, 0x00u, 0x20u, 0x00u, 0x80u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 449   1                      0x00u, 0x00u, 0x80u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x50u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 450   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 451   1      
 452   1              /* DSISWITCH_1_4 Address: CYDEV_UCFG_DSI1_BASE Size (bytes): 128 */
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 10  

 453   1              DMAINITSEC static const uint8 CYCODE BS_DSISWITCH_1_4_VAL[] = {
 454   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x04u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x80u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 455   1                      0x00u, 0x00u, 0x00u, 0x20u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 456   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 457   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 458   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 459   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 460   1                      0x00u, 0x00u, 0x00u, 0x01u, 0x00u, 0x01u, 0x00u, 0x02u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 461   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 462   1      
 463   1              /* DSI3_4_HV_ROUTING Address: CYDEV_UCFG_DSI1_BASE + 0x00000080u Size (bytes): 128 */
 464   1              DMAINITSEC static const uint8 CYCODE BS_DSI3_4_HV_ROUTING_VAL[] = {
 465   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x01u, 
 466   1                      0x00u, 0x00u, 0x00u, 0x02u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x01u, 0x00u, 0x00u, 0x00u, 0x80u, 0x00u,
             - 0x00u, 
 467   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x01u, 0x00u, 0x01u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 468   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 469   1                      0x20u, 0x00u, 0x10u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 470   1                      0x00u, 0x00u, 0x00u, 0x00u, 0xC0u, 0x00u, 0xC0u, 0x00u, 0x80u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 471   1                      0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x20u, 0x00u, 0x00u, 0x00u, 0x20u,
             - 0x00u, 
 472   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 473   1      
 474   1              /* DSISWITCH_1_5 Address: CYDEV_UCFG_DSI0_BASE Size (bytes): 128 */
 475   1              DMAINITSEC static const uint8 CYCODE BS_DSISWITCH_1_5_VAL[] = {
 476   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 477   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 478   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 479   1                      0x40u, 0x00u, 0x00u, 0x00u, 0x40u, 0x80u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 480   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 481   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 482   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 483   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 484   1      
 485   1              /* DSI3_5_HV_ROUTING Address: CYDEV_UCFG_DSI0_BASE + 0x00000080u Size (bytes): 128 */
 486   1              DMAINITSEC static const uint8 CYCODE BS_DSI3_5_HV_ROUTING_VAL[] = {
 487   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 488   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 11  

 489   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 490   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 491   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x30u, 0x00u, 0x00u,
             - 0x00u, 
 492   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 493   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 494   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 495   1      
 496   1              /* PHUB_CH1_CFGMEM_CFG0/1 initialization data */
 497   1              DMAINITSEC static const uint8 CYCODE CH1_ADDR_DATA0[] = { 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u
             -, 0x00u };
 498   1      
 499   1              /* PHUB_CH2_CFGMEM_CFG0/1 initialization data */
 500   1              DMAINITSEC static const uint8 CYCODE CH2_ADDR_DATA0[] = { 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x01u
             -, 0x00u };
 501   1      
 502   1              /* PHUB_CH4_CFGMEM_CFG0/1 initialization data */
 503   1              DMAINITSEC static const uint8 CYCODE CH4_ADDR_DATA0[] = { 0x01u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x01u
             -, 0x00u };
 504   1      
 505   1              /* PHUB_CH5_CFGMEM_CFG0/1 initialization data */
 506   1              DMAINITSEC static const uint8 CYCODE CH5_ADDR_DATA0[] = { 0x01u, 0x00u, 0x00u, 0x00u, 0x08u, 0x00u, 0x00u
             -, 0x00u };
 507   1      
 508   1              /* PHUB_CH6_CFGMEM_CFG0/1 initialization data */
 509   1              DMAINITSEC static const uint8 CYCODE CH6_ADDR_DATA0[] = { 0x01u, 0x00u, 0x00u, 0x00u, 0x08u, 0x00u, 0x01u
             -, 0x00u };
 510   1      
 511   1              /* Initialization data for each DMA channel's TD registers */
 512   1              DMAINITSEC static const uint8 CYCODE DMA_TD_START_CMD[] = { 0x01u, 0x00u, 0x00u, 0x00u, 0x01u };
 513   1      
 514   1              CYALIGNED static uint32 CYXDATA DMA_ZERO_VAL;
 515   1      
 516   1              /* This table holds all of the initialization data necessary for the DMA
 517   1                 process to transfer data from the source location to the destination. */
 518   1              DMAINITSEC static const struct td_t CYCODE CFG_TD_LIST0[] = {
 519   1                      /* Size, Flags, Next, Source, Destination */
 520   1                      { 8u, 0x23u, 0x02u, (uint16)(uint32)(CH1_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM1_CFG0) },      /* TD 1 */
 521   1                      { 8u, 0x23u, 0x03u, (uint16)(uint32)(CH2_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM2_CFG0) },      /* TD 2 */
 522   1                      { 8u, 0x23u, 0x04u, (uint16)(uint32)(CH4_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM4_CFG0) },      /* TD 3 */
 523   1                      { 8u, 0x23u, 0x05u, (uint16)(uint32)(CH5_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM5_CFG0) },      /* TD 4 */
 524   1                      { 8u, 0x23u, 0x06u, (uint16)(uint32)(CH6_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM6_CFG0) },      /* TD 5 */
 525   1                      { 5u, 0x23u, 0x07u, (uint16)(uint32)(DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH1_BASIC_CFG) },   /* TD 6 */
 526   1                      { 5u, 0x23u, 0x08u, (uint16)(uint32)(DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH2_BASIC_CFG) },   /* TD 7 */
 527   1                      { 5u, 0x23u, 0x09u, (uint16)(uint32)(DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH4_BASIC_CFG) },   /* TD 8 */
 528   1                      { 5u, 0x23u, 0x0Au, (uint16)(uint32)(DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH5_BASIC_CFG) },   /* TD 9 */
 529   1                      { 5u, 0x23u, 0xFEu, (uint16)(uint32)(DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH6_BASIC_CFG) },   /* TD 10 *
             -/
 530   1                      { 64u, 0x22u, 0xFEu, (uint16)(uint32)(&DMA_ZERO_VAL), (uint16)(CYREG_PRT3_DR) },        /* TD 11 */
 531   1                      { 128u, 0x22u, 0x0Du, (uint16)(uint32)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_DSI7_BASE) },        /* TD 12 */
 532   1                      { 128u, 0x22u, 0x0Eu, (uint16)(uint32)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_DSI9_BASE) },        /* TD 13 */
 533   1                      { 128u, 0x22u, 0xFEu, (uint16)(uint32)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_DSI13_BASE) },       /* TD 14 */
 534   1                      { 128u, 0x23u, 0x10u, (uint16)(uint32)(BS_UDB_2_4_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P1_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 15 */
 535   1                      { 128u, 0x23u, 0x11u, (uint16)(uint32)(BS_UDBSWITCH_0_5_VAL), (uint16)(CYDEV_UCFG_B0_P7_ROUTE_BASE) },  /
             -* TD 16 */
 536   1                      { 128u, 0x23u, 0x12u, (uint16)(uint32)(BS_UDB_1_5_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P7_ROUTE_BASE 
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 12  

             -+ 0x00000080u) },     /* TD 17 */
 537   1                      { 128u, 0x23u, 0x13u, (uint16)(uint32)(BS_UDBSWITCH_1_5_VAL), (uint16)(CYDEV_UCFG_B0_P0_ROUTE_BASE) },  /
             -* TD 18 */
 538   1                      { 128u, 0x23u, 0x14u, (uint16)(uint32)(BS_UDB_2_5_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P0_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 19 */
 539   1                      { 128u, 0x23u, 0x15u, (uint16)(uint32)(BS_DSI3_0_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI9_BASE + 0x0000
             -0080u) },        /* TD 20 */
 540   1                      { 128u, 0x23u, 0x16u, (uint16)(uint32)(BS_DSISWITCH_1_1_VAL), (uint16)(CYDEV_UCFG_DSI8_BASE) }, /* TD 21
             - */
 541   1                      { 128u, 0x23u, 0x17u, (uint16)(uint32)(BS_DSI3_1_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI8_BASE + 0x0000
             -0080u) },        /* TD 22 */
 542   1                      { 128u, 0x23u, 0x18u, (uint16)(uint32)(BS_DSISWITCH_1_2_VAL), (uint16)(CYDEV_UCFG_DSI3_BASE) }, /* TD 23
             - */
 543   1                      { 128u, 0x23u, 0x19u, (uint16)(uint32)(BS_DSI3_2_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI3_BASE + 0x0000
             -0080u) },        /* TD 24 */
 544   1                      { 128u, 0x23u, 0x1Au, (uint16)(uint32)(BS_DSISWITCH_1_3_VAL), (uint16)(CYDEV_UCFG_DSI2_BASE) }, /* TD 25
             - */
 545   1                      { 128u, 0x23u, 0x1Bu, (uint16)(uint32)(BS_DSI3_3_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI2_BASE + 0x0000
             -0080u) },        /* TD 26 */
 546   1                      { 128u, 0x23u, 0x1Cu, (uint16)(uint32)(BS_DSISWITCH_1_4_VAL), (uint16)(CYDEV_UCFG_DSI1_BASE) }, /* TD 27
             - */
 547   1                      { 128u, 0x23u, 0x1Du, (uint16)(uint32)(BS_DSI3_4_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI1_BASE + 0x0000
             -0080u) },        /* TD 28 */
 548   1                      { 128u, 0x23u, 0x1Eu, (uint16)(uint32)(BS_DSISWITCH_1_5_VAL), (uint16)(CYDEV_UCFG_DSI0_BASE) }, /* TD 29
             - */
 549   1                      { 128u, 0x23u, 0xFEu, (uint16)(uint32)(BS_DSI3_5_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI0_BASE + 0x0000
             -0080u) },        /* TD 30 */
 550   1                      { 7u, 0x23u, 0x20u, (uint16)(uint32)(BS_IOPORT_0_VAL), (uint16)(CYDEV_PRTDSI_PRT0_BASE) },      /* TD 31 */
 551   1                      { 7u, 0x23u, 0x21u, (uint16)(uint32)(BS_IOPORT_1_VAL), (uint16)(CYDEV_PRTDSI_PRT1_BASE) },      /* TD 32 */
 552   1                      { 7u, 0x23u, 0x22u, (uint16)(uint32)(BS_IOPORT_2_VAL), (uint16)(CYDEV_PRTDSI_PRT2_BASE) },      /* TD 33 */
 553   1                      { 6u, 0x23u, 0x23u, (uint16)(uint32)(BS_IOPORT_7_VAL), (uint16)(CYDEV_PRTDSI_PRT12_BASE) },     /* TD 34 */
 554   1                      { 7u, 0x23u, 0x24u, (uint16)(uint32)(BS_IOPORT_8_VAL), (uint16)(CYDEV_PRTDSI_PRT15_BASE) },     /* TD 35 */
 555   1                      { 12u, 0x23u, 0x25u, (uint16)(uint32)(BS_TMR0_VAL), (uint16)(CYREG_TMR0_CFG0) },        /* TD 36 */
 556   1                      { 12u, 0x23u, 0x26u, (uint16)(uint32)(BS_TMR1_VAL), (uint16)(CYREG_TMR1_CFG0) },        /* TD 37 */
 557   1                      { 32u, 0x23u, 0x27u, (uint16)(uint32)(BS_UWRK_B0_WRK_STATCTL_BITS_VAL), (uint16)(CYDEV_UWRK_UWRK8_B0_BAS
             -E + 0x00000070u) },   /* TD 38 */
 558   1                      { 32u, 0x23u, 0xFEu, (uint16)(uint32)(BS_UWRK_B1_WRK_STATCTL_BITS_VAL), (uint16)(CYDEV_UWRK_UWRK8_B1_BAS
             -E + 0x00000070u) },   /* TD 39 */
 559   1                      { 8u, 0x23u, 0x29u, (uint16)(uint32)(BS_IDMUX_IRQ_VAL), (uint16)(CYREG_IDMUX_IRQ_CTL0) },       /* TD 40 */
 560   1                      { 128u, 0x23u, 0x2Au, (uint16)(uint32)(BS_UDB_1_5_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P0_U0_BASE) },  /
             -* TD 41 */
 561   1                      { 128u, 0x23u, 0x2Bu, (uint16)(uint32)(BS_UDB_1_5_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P0_U1_BASE) },  /
             -* TD 42 */
 562   1                      { 128u, 0x23u, 0x2Cu, (uint16)(uint32)(BS_UDB_1_4_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P1_U0_BASE) },  /
             -* TD 43 */
 563   1                      { 128u, 0x23u, 0x2Du, (uint16)(uint32)(BS_UDB_1_4_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P1_U1_BASE) },  /
             -* TD 44 */
 564   1                      { 128u, 0x23u, 0x2Eu, (uint16)(uint32)(BS_UDB_1_3_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P2_U0_BASE) },  /
             -* TD 45 */
 565   1                      { 128u, 0x23u, 0x2Fu, (uint16)(uint32)(BS_UDB_1_3_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P2_U1_BASE) },  /
             -* TD 46 */
 566   1                      { 128u, 0x23u, 0x30u, (uint16)(uint32)(BS_UDB_1_2_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P3_U0_BASE) },  /
             -* TD 47 */
 567   1                      { 128u, 0x23u, 0x31u, (uint16)(uint32)(BS_UDB_1_2_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P3_U1_BASE) },  /
             -* TD 48 */
 568   1                      { 128u, 0x23u, 0x32u, (uint16)(uint32)(BS_UDB_0_2_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P4_U0_BASE) },  /
             -* TD 49 */
 569   1                      { 128u, 0x23u, 0x33u, (uint16)(uint32)(BS_UDB_0_2_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P4_U1_BASE) },  /
             -* TD 50 */
 570   1                      { 128u, 0x23u, 0x34u, (uint16)(uint32)(BS_UDB_0_3_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P5_U0_BASE) },  /
             -* TD 51 */
 571   1                      { 128u, 0x23u, 0x35u, (uint16)(uint32)(BS_UDB_0_3_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P5_U1_BASE) },  /
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 13  

             -* TD 52 */
 572   1                      { 128u, 0x23u, 0x36u, (uint16)(uint32)(BS_UDB_0_4_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P6_U0_BASE) },  /
             -* TD 53 */
 573   1                      { 128u, 0x23u, 0x37u, (uint16)(uint32)(BS_UDB_0_4_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P6_U1_BASE) },  /
             -* TD 54 */
 574   1                      { 128u, 0x23u, 0x38u, (uint16)(uint32)(BS_UDB_0_5_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P7_U0_BASE) },  /
             -* TD 55 */
 575   1                      { 128u, 0x23u, 0x39u, (uint16)(uint32)(BS_UDB_0_5_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P7_U1_BASE) },  /
             -* TD 56 */
 576   1                      { 128u, 0x23u, 0x3Au, (uint16)(uint32)(BS_UDB_1_0_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P2_U0_BASE) },  /
             -* TD 57 */
 577   1                      { 128u, 0x23u, 0x3Bu, (uint16)(uint32)(BS_UDB_1_0_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P2_U1_BASE) },  /
             -* TD 58 */
 578   1                      { 128u, 0x23u, 0x3Cu, (uint16)(uint32)(BS_UDB_1_1_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P3_U0_BASE) },  /
             -* TD 59 */
 579   1                      { 128u, 0x23u, 0x3Du, (uint16)(uint32)(BS_UDB_1_1_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P3_U1_BASE) },  /
             -* TD 60 */
 580   1                      { 128u, 0x23u, 0x3Eu, (uint16)(uint32)(BS_UDB_0_1_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P4_U0_BASE) },  /
             -* TD 61 */
 581   1                      { 128u, 0x23u, 0x3Fu, (uint16)(uint32)(BS_UDB_0_1_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P4_U1_BASE) },  /
             -* TD 62 */
 582   1                      { 128u, 0x23u, 0x40u, (uint16)(uint32)(BS_UDB_0_0_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P5_U0_BASE) },  /
             -* TD 63 */
 583   1                      { 128u, 0x23u, 0x41u, (uint16)(uint32)(BS_UDB_0_0_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P5_U1_BASE) },  /
             -* TD 64 */
 584   1                      { 16u, 0x23u, 0x42u, (uint16)(uint32)(BS_UCFG_BCTL1_VAL), (uint16)(CYREG_BCTL1_MDCLK_EN) },     /* TD 65 */
 585   1                      { 16u, 0x23u, 0x43u, (uint16)(uint32)(BS_UCFG_BCTL0_VAL), (uint16)(CYREG_BCTL0_MDCLK_EN) },     /* TD 66 */
 586   1                      { 128u, 0x23u, 0x44u, (uint16)(uint32)(BS_DSI0_0_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI13_BASE + 0x000
             -00080u) },        /* TD 67 */
 587   1                      { 128u, 0x23u, 0x45u, (uint16)(uint32)(BS_DSISWITCH_0_1_VAL), (uint16)(CYDEV_UCFG_DSI12_BASE) },        /* TD 6
             -8 */
 588   1                      { 128u, 0x23u, 0x46u, (uint16)(uint32)(BS_DSI0_1_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI12_BASE + 0x000
             -00080u) },        /* TD 69 */
 589   1                      { 128u, 0x23u, 0x47u, (uint16)(uint32)(BS_DSI0_2_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI7_BASE + 0x0000
             -0080u) },        /* TD 70 */
 590   1                      { 128u, 0x23u, 0x48u, (uint16)(uint32)(BS_DSISWITCH_0_3_VAL), (uint16)(CYDEV_UCFG_DSI6_BASE) }, /* TD 71
             - */
 591   1                      { 128u, 0x23u, 0x49u, (uint16)(uint32)(BS_DSI0_3_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI6_BASE + 0x0000
             -0080u) },        /* TD 72 */
 592   1                      { 128u, 0x23u, 0x4Au, (uint16)(uint32)(BS_DSISWITCH_0_4_VAL), (uint16)(CYDEV_UCFG_DSI5_BASE) }, /* TD 73
             - */
 593   1                      { 128u, 0x23u, 0x4Bu, (uint16)(uint32)(BS_DSI0_4_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI5_BASE + 0x0000
             -0080u) },        /* TD 74 */
 594   1                      { 128u, 0x23u, 0x4Cu, (uint16)(uint32)(BS_DSISWITCH_0_5_VAL), (uint16)(CYDEV_UCFG_DSI4_BASE) }, /* TD 75
             - */
 595   1                      { 128u, 0x23u, 0x4Du, (uint16)(uint32)(BS_DSI0_5_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI4_BASE + 0x0000
             -0080u) },        /* TD 76 */
 596   1                      { 128u, 0x23u, 0x4Eu, (uint16)(uint32)(BS_UDBSWITCH_0_0_VAL), (uint16)(CYDEV_UCFG_B1_P5_ROUTE_BASE) },  /
             -* TD 77 */
 597   1                      { 128u, 0x23u, 0x4Fu, (uint16)(uint32)(BS_UDB_1_0_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B1_P5_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 78 */
 598   1                      { 128u, 0x23u, 0x50u, (uint16)(uint32)(BS_UDBSWITCH_1_0_VAL), (uint16)(CYDEV_UCFG_B1_P2_ROUTE_BASE) },  /
             -* TD 79 */
 599   1                      { 128u, 0x23u, 0x51u, (uint16)(uint32)(BS_UDB_2_0_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B1_P2_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 80 */
 600   1                      { 128u, 0x23u, 0x52u, (uint16)(uint32)(BS_UDBSWITCH_0_1_VAL), (uint16)(CYDEV_UCFG_B1_P4_ROUTE_BASE) },  /
             -* TD 81 */
 601   1                      { 128u, 0x23u, 0x53u, (uint16)(uint32)(BS_UDB_1_1_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B1_P4_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 82 */
 602   1                      { 128u, 0x23u, 0x54u, (uint16)(uint32)(BS_UDBSWITCH_1_1_VAL), (uint16)(CYDEV_UCFG_B1_P3_ROUTE_BASE) },  /
             -* TD 83 */
 603   1                      { 128u, 0x23u, 0x55u, (uint16)(uint32)(BS_UDB_2_1_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B1_P3_ROUTE_BASE 
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 14  

             -+ 0x00000080u) },     /* TD 84 */
 604   1                      { 128u, 0x23u, 0x56u, (uint16)(uint32)(BS_UDBSWITCH_0_2_VAL), (uint16)(CYDEV_UCFG_B0_P4_ROUTE_BASE) },  /
             -* TD 85 */
 605   1                      { 128u, 0x23u, 0x57u, (uint16)(uint32)(BS_UDB_1_2_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P4_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 86 */
 606   1                      { 128u, 0x23u, 0x58u, (uint16)(uint32)(BS_UDBSWITCH_1_2_VAL), (uint16)(CYDEV_UCFG_B0_P3_ROUTE_BASE) },  /
             -* TD 87 */
 607   1                      { 128u, 0x23u, 0x59u, (uint16)(uint32)(BS_UDB_2_2_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P3_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 88 */
 608   1                      { 128u, 0x23u, 0x5Au, (uint16)(uint32)(BS_UDBSWITCH_0_3_VAL), (uint16)(CYDEV_UCFG_B0_P5_ROUTE_BASE) },  /
             -* TD 89 */
 609   1                      { 128u, 0x23u, 0x5Bu, (uint16)(uint32)(BS_UDB_1_3_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P5_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 90 */
 610   1                      { 128u, 0x23u, 0x5Cu, (uint16)(uint32)(BS_UDBSWITCH_1_3_VAL), (uint16)(CYDEV_UCFG_B0_P2_ROUTE_BASE) },  /
             -* TD 91 */
 611   1                      { 128u, 0x23u, 0x5Du, (uint16)(uint32)(BS_UDB_2_3_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P2_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 92 */
 612   1                      { 128u, 0x23u, 0x5Eu, (uint16)(uint32)(BS_UDBSWITCH_0_4_VAL), (uint16)(CYDEV_UCFG_B0_P6_ROUTE_BASE) },  /
             -* TD 93 */
 613   1                      { 128u, 0x23u, 0x5Fu, (uint16)(uint32)(BS_UDB_1_4_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P6_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 94 */
 614   1                      { 128u, 0x23u, 0xFEu, (uint16)(uint32)(BS_UDBSWITCH_1_4_VAL), (uint16)(CYDEV_UCFG_B0_P1_ROUTE_BASE) },  /
             -* TD 95 */
 615   1              };
 616   1      
 617   1              DMA_ZERO_VAL = 0u;
 618   1              CY_SET_REG8((void CYXDATA *)CYREG_PHUB_CFGMEM0_CFG0, 0x10u);    /* set burstcnt */
 619   1              CY_SET_REG8((void CYXDATA *)CYREG_PHUB_CH0_BASIC_CFG, 0x01u);   /* enable ch0 */
 620   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_CH0_BASIC_STATUS+1u), 0x00u);   /* set first TD to 0 */
 621   1              CY_SET_REG16((void CYXDATA *)CYREG_PHUB_TDMEM0_ORIG_TD0, 95u*8u);       /* transfer size */
 622   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_TDMEM0_ORIG_TD0+2u), 0x01u);    /* set next TD to 1 */
 623   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_TDMEM0_ORIG_TD0+3u), 0xA3u);    /* set TD flags */
 624   1              CY_SET_REG16((void CYXDATA *)CYREG_PHUB_TDMEM0_ORIG_TD1, (uint16)((uint32)CFG_TD_LIST0 & 0x0000FFFFu)); /
             -* set td0's src addr */
 625   1              CY_SET_REG16((void CYXDATA *)(CYREG_PHUB_TDMEM0_ORIG_TD1+2u), CYDEV_PHUB_TDMEM1_BASE);  /* set td0's dst a
             -ddr */
 626   1              CY_SET_REG16((void CYXDATA *)CYREG_PHUB_CFGMEM0_CFG1, (uint16)(CYDEV_FLS_BASE >> 16));  /* set ch0's src h
             -igh addr */
 627   1              CY_SET_REG16((void CYXDATA *)(CYREG_PHUB_CFGMEM0_CFG1+2u), (uint16)(CYDEV_PHUB_TDMEM1_BASE >> 16));     /* se
             -t ch0's dst high addr */
 628   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_CH1_BASIC_STATUS+1u), 0x0Bu);   /* ch1 first TD: 11 */
 629   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_CH2_BASIC_STATUS+1u), 0x0Cu);   /* ch2 first TD: 12 */
 630   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_CH4_BASIC_STATUS+1u), 0x0Fu);   /* ch4 first TD: 15 */
 631   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_CH5_BASIC_STATUS+1u), 0x1Fu);   /* ch5 first TD: 31 */
 632   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_CH6_BASIC_STATUS+1u), 0x28u);   /* ch6 first TD: 40 */
 633   1      
 634   1              CY_CFG_MEMORY_BARRIER();
 635   1              CY_SET_REG8((void CYXDATA *)CYREG_PHUB_CH0_ACTION, 0x01u); /* cpu_req */
 636   1              CY_CFG_MEMORY_BARRIER();
 637   1      
 638   1              /* Wait for all DMA transfers to complete */
 639   1              while(0u != (CY_GET_REG8((void CYXDATA *)CYREG_PHUB_CH0_BASIC_STATUS) & 0x01u)){}
 640   1              while(0u != (CY_GET_REG8((void CYXDATA *)CYREG_PHUB_CH1_BASIC_STATUS) & 0x01u)){}
 641   1              while(0u != (CY_GET_REG8((void CYXDATA *)CYREG_PHUB_CH2_BASIC_STATUS) & 0x01u)){}
 642   1              while(0u != (CY_GET_REG8((void CYXDATA *)CYREG_PHUB_CH4_BASIC_STATUS) & 0x01u)){}
 643   1              while(0u != (CY_GET_REG8((void CYXDATA *)CYREG_PHUB_CH5_BASIC_STATUS) & 0x01u)){}
 644   1              while(0u != (CY_GET_REG8((void CYXDATA *)CYREG_PHUB_CH6_BASIC_STATUS) & 0x01u)){}
 645   1      
 646   1      
 647   1              CYCONFIGCPY((void CYFAR *)(CYREG_IDMUX_DRQ_CTL0), (const void CYFAR *)(BS_IDMUX_VAL), 6u);
 648   1      
 649   1      }
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 15  

 650          /*******************************************************************************
 651          * Function Name: ClockSetup
 652          ********************************************************************************
 653          *
 654          * Summary:
 655          *  Performs the initialization of all of the clocks in the device based on the
 656          *  settings in the Clock tab of the DWR.  This includes enabling the requested
 657          *  clocks and setting the necessary dividers to produce the desired frequency. 
 658          *
 659          * Parameters:
 660          *  void
 661          *
 662          * Return:
 663          *  void
 664          *
 665          *******************************************************************************/
 666          static void ClockSetup(void);
 667          static void ClockSetup(void)
 668          {
 669   1              /* CYDEV_CLKDIST_ACFG0_CFG0 Address: CYREG_CLKDIST_ACFG0_CFG0 Size (bytes): 4 */
 670   1              DMAINITSEC static const uint8 CYCODE BS_CYDEV_CLKDIST_ACFG0_CFG0_VAL[] = {
 671   1                      0x15u, 0x00u, 0x18u, 0x01u};
 672   1      
 673   1              uint32 timeout;
 674   1              uint8 pllLock;
 675   1      
 676   1      
 677   1              /* Configure Digital Clocks based on settings from Clock DWR */
 678   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG0_CFG0), 0x0002u);
 679   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG0_CFG0 + 0x2u), 0x18u);
 680   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG1_CFG0), 0x0000u);
 681   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG1_CFG0 + 0x2u), 0x50u);
 682   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG2_CFG0), 0x0FFFu);
 683   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG2_CFG0 + 0x2u), 0x1Bu);
 684   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG3_CFG0), 0x000Bu);
 685   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG3_CFG0 + 0x2u), 0x19u);
 686   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG4_CFG0), 0x002Fu);
 687   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG4_CFG0 + 0x2u), 0x18u);
 688   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG5_CFG0), 0x00EFu);
 689   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG5_CFG0 + 0x2u), 0x18u);
 690   1      
 691   1              /* Configure Analog Clocks based on settings from Clock DWR */
 692   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_CLKDIST_ACFG0_CFG0), (const void CYCODE *)(BS_CYDEV_CLKDIST_ACFG0_CF
             -G0_VAL), 4u);
 693   1      
 694   1              /* Configure ILO based on settings from Clock DWR */
 695   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_ILO_CR0), 0x06u);
 696   1      
 697   1              /* Configure IMO based on settings from Clock DWR */
 698   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_IMO_CR), 0x52u);
 699   1              CY_SET_REG8((void CYXDATA *)(CYREG_IMO_TR1), (CY_GET_XTND_REG8((void CYFAR *)CYREG_FLSHID_CUST_TABLES_IMO
             -_USB)));
 700   1      
 701   1              /* Configure PLL based on settings from Clock DWR */
 702   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_P), 0x0710u);
 703   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_CFG0), 0x1251u);
 704   1              /* Wait up to 250us for the PLL to lock */
 705   1              pllLock = 0u;
 706   1              for (timeout = 250u / 10u; (timeout > 0u) && (pllLock != 0x03u); timeout--)
 707   1              { 
 708   2                      pllLock = 0x03u & ((uint8)((uint8)pllLock << 1) | ((CY_GET_REG8((void CYXDATA *)CYREG_FASTCLK_PLL_SR) & 
             -0x01u) >> 0));
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 16  

 709   2                      CyDelayCycles(10u * 48u); /* Delay 10us based on 48MHz clock */
 710   2              }
 711   1              /* If we ran out of time the PLL didn't lock so go to the error function */
 712   1              if (timeout == 0u)
 713   1              {
 714   2                      CyClockStartupError(CYCLOCKSTART_PLL_ERROR);
 715   2              }
 716   1      
 717   1              /* Configure Bus/Master Clock based on settings from Clock DWR */
 718   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_MSTR0), 0x0100u);
 719   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x07u);
 720   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG0), 0x00u);
 721   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG2), 0x48u);
 722   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00u);
 723   1      
 724   1              /* Configure USB Clock based on settings from Clock DWR */
 725   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_UCFG), 0x00u);
 726   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_LD), 0x02u);
 727   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DLY1), 0x04u);
 728   1      
 729   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG2), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG2) | 0x3Fu
             -)));
 730   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG1), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG1) | 0x01u
             -)));
 731   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG0), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x80u
             -)));
 732   1      }
 733          
 734          
 735          /* Analog API Functions */
 736          
 737          
 738          /*******************************************************************************
 739          * Function Name: AnalogSetDefault
 740          ********************************************************************************
 741          *
 742          * Summary:
 743          *  Sets up the analog portions of the chip to default values based on chip
 744          *  configuration options from the project.
 745          *
 746          * Parameters:
 747          *  void
 748          *
 749          * Return:
 750          *  void
 751          *
 752          *******************************************************************************/
 753          static void AnalogSetDefault(void);
 754          static void AnalogSetDefault(void)
 755          {
 756   1              uint8 bg_xover_inl_trim = CY_GET_XTND_REG8((void CYFAR *)(CYREG_FLSHID_MFG_CFG_BG_XOVER_INL_TRIM + 1u));
 757   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT0), (bg_xover_inl_trim & 0x07u));
 758   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT1), ((bg_xover_inl_trim >> 4) & 0x0Fu));
 759   1              CY_SET_REG8((void CYXDATA *)CYREG_PRT0_AG, 0xE0u);
 760   1              CY_SET_REG8((void CYXDATA *)CYREG_DSM0_SW0, 0xE0u);
 761   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, 0x44u);
 762   1      }
 763          
 764          
 765          /*******************************************************************************
 766          * Function Name: SetAnalogRoutingPumps
 767          ********************************************************************************
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 17  

 768          *
 769          * Summary:
 770          * Enables or disables the analog pumps feeding analog routing switches.
 771          * Intended to be called at startup, based on the Vdda system configuration;
 772          * may be called during operation when the user informs us that the Vdda voltage
 773          * crossed the pump threshold.
 774          *
 775          * Parameters:
 776          *  enabled - 1 to enable the pumps, 0 to disable the pumps
 777          *
 778          * Return:
 779          *  void
 780          *
 781          *******************************************************************************/
 782          void SetAnalogRoutingPumps(uint8 enabled)
 783          {
 784   1              uint8 regValue = CY_GET_REG8((void CYXDATA *)CYREG_PUMP_CR0);
 785   1              if (enabled != 0u)
 786   1              {
 787   2                      regValue |= 0x22u;
 788   2              }
 789   1              else
 790   1              {
 791   2                      regValue &= (uint8)~0x22u;
 792   2              }
 793   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, regValue);
 794   1      }
 795          
 796          #define CY_AMUX_UNUSED CYREG_BOOST_SR
 797          /* This is an implementation detail of the AMux. Code that depends on it may be
 798             incompatible with other versions of PSoC Creator. */
 799          uint8 CYXDATA * const CYCODE ADC_AMux__addrTable[2] = {
 800                  (uint8 CYXDATA *)CYREG_DSM0_SW3, 
 801                  (uint8 CYXDATA *)CY_AMUX_UNUSED, 
 802          };
 803          
 804          /* This is an implementation detail of the AMux. Code that depends on it may be
 805             incompatible with other versions of PSoC Creator. */
 806          const uint8 CYCODE ADC_AMux__maskTable[2] = {
 807                  0x40u, 
 808                  0x00u, 
 809          };
 810          
 811          /*******************************************************************************
 812          * Function Name: ADC_AMux_Set
 813          ********************************************************************************
 814          * Summary:
 815          *  This function is used to set a particular channel as active on the AMux.
 816          *
 817          * Parameters:  
 818          *   channel - The mux channel input to set as active
 819          *
 820          * Return:
 821          *   void
 822          *
 823          *******************************************************************************/
 824          void ADC_AMux_Set(uint8 channel)
 825          {
 826   1              if (channel < 2)
 827   1              {
 828   2                      *ADC_AMux__addrTable[channel] |= ADC_AMux__maskTable[channel];
 829   2              }
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 18  

 830   1      }
 831          
 832          /*******************************************************************************
 833          * Function Name: ADC_AMux_Unset
 834          ********************************************************************************
 835          * Summary:
 836          *  This function is used to clear a particular channel from being active on the
 837          *  AMux.
 838          *
 839          * Parameters:  
 840          *   channel - The mux channel input to mark inactive
 841          *
 842          * Return:
 843          *   void
 844          *
 845          *******************************************************************************/
 846          void ADC_AMux_Unset(uint8 channel)
 847          {
 848   1              if (channel < 2)
 849   1              {
 850   2                      *ADC_AMux__addrTable[channel] &= (uint8)~ADC_AMux__maskTable[channel];
 851   2              }
 852   1      }
 853          
 854          
 855          
 856          /*******************************************************************************
 857          * Function Name: cyfitter_cfg
 858          ********************************************************************************
 859          * Summary:
 860          *  This function is called by the start-up code for the selected device. It
 861          *  performs all of the necessary device configuration based on the design
 862          *  settings.  This includes settings from the Design Wide Resources (DWR) such
 863          *  as Clocks and Pins as well as any component configuration that is necessary.
 864          *
 865          * Parameters:  
 866          *   void
 867          *
 868          * Return:
 869          *   void
 870          *
 871          *******************************************************************************/
 872          
 873          void cyfitter_cfg(void)
 874          {
 875   1              /* IOPINS0_7 Address: CYREG_PRT12_DM0 Size (bytes): 8 */
 876   1              DMAINITSEC static const uint8 CYCODE BS_IOPINS0_7_VAL[] = {
 877   1                      0x00u, 0x0Cu, 0x0Cu, 0x00u, 0x0Cu, 0x00u, 0x00u, 0x00u};
 878   1      
 879   1              /* IOPINS0_8 Address: CYREG_PRT15_DR Size (bytes): 10 */
 880   1              DMAINITSEC static const uint8 CYCODE BS_IOPINS0_8_VAL[] = {
 881   1                      0x04u, 0x00u, 0x00u, 0x0Fu, 0x0Bu, 0x00u, 0x0Bu, 0x00u, 0x00u, 0x00u};
 882   1      
 883   1              /* IOPINS0_1 Address: CYREG_PRT1_DR Size (bytes): 10 */
 884   1              DMAINITSEC static const uint8 CYCODE BS_IOPINS0_1_VAL[] = {
 885   1                      0x80u, 0x00u, 0x00u, 0xFFu, 0x7Bu, 0x00u, 0x7Bu, 0x00u, 0x00u, 0x00u};
 886   1      
 887   1              /* IOPINS0_2 Address: CYREG_PRT2_DM0 Size (bytes): 8 */
 888   1              DMAINITSEC static const uint8 CYCODE BS_IOPINS0_2_VAL[] = {
 889   1                      0x30u, 0xD8u, 0xC8u, 0x00u, 0xD8u, 0x00u, 0x00u, 0x00u};
 890   1      
 891   1              /* PHUB_CFGMEM10 Address: CYREG_PHUB_CFGMEM10_CFG0 Size (bytes): 4 */
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 19  

 892   1              DMAINITSEC static const uint8 CYCODE BS_PHUB_CFGMEM10_VAL[] = {
 893   1                      0x00u, 0x0Au, 0x00u, 0x00u};
 894   1      
 895   1              /* Enable/Disable Debug functionality based on settings from System DWR */
 896   1              CY_SET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG, (CY_GET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG) | 
             -0x01u));
 897   1      
 898   1              {
 899   2                      cfg_dma_init();
 900   2      
 901   2                      /* Perform normal device configuration. Order is not critical for these items. */
 902   2                      CY_SET_REG8((void CYXDATA *)(CYREG_DSM0_CR3), 0x0Au);
 903   2                      CYCONFIGCPYCODE((void CYFAR *)(CYREG_PHUB_CFGMEM10_CFG0), (const void CYCODE *)(BS_PHUB_CFGMEM10_VAL), 4
             -u);
 904   2      
 905   2                      /* Enable digital routing */
 906   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL
             -) | 0x02u);
 907   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL
             -) | 0x02u);
 908   2      
 909   2                      /* Enable UDB array */
 910   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x40u);
 911   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2, CY_GET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2) | 0x10u)
             -;
 912   2              }
 913   1      
 914   1      
 915   1              /* Perform second pass device configuration. These items must be configured in specific order after the r
             -egular configuration is done. */
 916   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT0_DR), (const void CYFAR *)(BS_IOPINS0_0_VAL), 10u);
 917   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT12_DM0), (const void CYCODE *)(BS_IOPINS0_7_VAL), 8u);
 918   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT15_DR), (const void CYCODE *)(BS_IOPINS0_8_VAL), 10u);
 919   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT1_DR), (const void CYCODE *)(BS_IOPINS0_1_VAL), 10u);
 920   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT2_DM0), (const void CYCODE *)(BS_IOPINS0_2_VAL), 8u);
 921   1              CY_SET_REG8((void CYXDATA *)(CYREG_INTC_CSR_EN), 0x01u);
 922   1              /* Switch Boost to the precision bandgap reference from its internal reference */
 923   1              CY_SET_REG8((void CYXDATA *)CYREG_BOOST_CR2, (CY_GET_REG8((void CYXDATA *)CYREG_BOOST_CR2) | 0x08u));
 924   1              if (CYDEV_CHIP_REV_ACTUAL < 5u)
 925   1              {
 926   2                      CY_SET_REG8((void CYXDATA *)CYREG_PWRSYS_WAKE_TR2, 0x3Au);
 927   2              }
 928   1      
 929   1      
 930   1              /* Set Flash Cycles based on max possible frequency in case a glitch occurs during ClockSetup(). */
 931   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xF1u : 0xC0u));
 932   1              /* Setup clocks based on selections from Clock DWR */
 933   1              ClockSetup();
 934   1      
 935   1              /* Perform basic analog initialization to defaults */
 936   1              AnalogSetDefault();
 937   1      
 938   1              /* Configure alternate active mode */
 939   1              CYCONFIGCPY((void CYFAR *)CYDEV_PM_STBY_BASE, (const void CYFAR *)CYDEV_PM_ACT_BASE, 14u);
 940   1              CY_SET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0) & (uint8)
             -~0x02u);        /* Disable CPU */
 941   1      }
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 20  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _CyClockStartupError (BEGIN)
                                           ; SOURCE LINE # 72
0000 900000      R     MOV     DPTR,#errorCode
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 73
                                           ; SOURCE LINE # 75
0005 900000      R     MOV     DPTR,#errorCode
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#errorCode
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
000F         ?C0001:
                                           ; SOURCE LINE # 87
000F 80FE              SJMP    ?C0001
0011 22                RET     
             ; FUNCTION _CyClockStartupError (END)

             ; FUNCTION cfg_dma_init (BEGIN)
                                           ; SOURCE LINE # 309
                                           ; SOURCE LINE # 310
                                           ; SOURCE LINE # 617
0000 7F00              MOV     R7,#00H
0002 7E00              MOV     R6,#00H
0004 7D00              MOV     R5,#00H
0006 7C00              MOV     R4,#00H
0008 900000      R     MOV     DPTR,#DMA_ZERO_VAL
000B 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 618
000E 907600            MOV     DPTR,#07600H
0011 7410              MOV     A,#010H
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 619
0014 907010            MOV     DPTR,#07010H
0017 7401              MOV     A,#01H
0019 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 620
001A 907019            MOV     DPTR,#07019H
001D E4                CLR     A
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 621
001F 7B02              MOV     R3,#02H
0021 7A78              MOV     R2,#078H
0023 7900              MOV     R1,#00H
0025 7DF8              MOV     R5,#0F8H
0027 7C02              MOV     R4,#02H
0029 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 622
002C 907802            MOV     DPTR,#07802H
002F 7401              MOV     A,#01H
0031 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 623
0032 907803            MOV     DPTR,#07803H
0035 74A3              MOV     A,#0A3H
0037 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 624
0038 7B02              MOV     R3,#02H
003A 7A78              MOV     R2,#078H
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 21  

003C 7904              MOV     R1,#04H
003E C003              PUSH    AR3
0040 C002              PUSH    AR2
0042 C001              PUSH    AR1
0044 7BFF              MOV     R3,#0FFH
0046 7A00        R     MOV     R2,#HIGH CFG_TD_LIST0
0048 7900        R     MOV     R1,#LOW CFG_TD_LIST0
004A AF01              MOV     R7,AR1
004C AE02              MOV     R6,AR2
004E AD03              MOV     R5,AR3
0050 7C00              MOV     R4,#00H
0052 EF                MOV     A,R7
0053 54FF              ANL     A,#0FFH
0055 FF                MOV     R7,A
0056 EE                MOV     A,R6
0057 54FF              ANL     A,#0FFH
0059 FE                MOV     R6,A
005A ED                MOV     A,R5
005B 5400              ANL     A,#00H
005D FD                MOV     R5,A
005E EC                MOV     A,R4
005F 5400              ANL     A,#00H
0061 FC                MOV     R4,A
0062 AD07              MOV     R5,AR7
0064 AC06              MOV     R4,AR6
0066 D001              POP     AR1
0068 D002              POP     AR2
006A D003              POP     AR3
006C 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 625
006F 7B02              MOV     R3,#02H
0071 7A78              MOV     R2,#078H
0073 7906              MOV     R1,#06H
0075 7D08              MOV     R5,#08H
0077 7C78              MOV     R4,#078H
0079 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 626
007C 7B02              MOV     R3,#02H
007E 7A76              MOV     R2,#076H
0080 7904              MOV     R1,#04H
0082 7D10              MOV     R5,#010H
0084 7C00              MOV     R4,#00H
0086 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 627
0089 7B02              MOV     R3,#02H
008B 7A76              MOV     R2,#076H
008D 7906              MOV     R1,#06H
008F 7D00              MOV     R5,#00H
0091 7C00              MOV     R4,#00H
0093 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 628
0096 907029            MOV     DPTR,#07029H
0099 740B              MOV     A,#0BH
009B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 629
009C 907039            MOV     DPTR,#07039H
009F 740C              MOV     A,#0CH
00A1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 630
00A2 907059            MOV     DPTR,#07059H
00A5 740F              MOV     A,#0FH
00A7 F0                MOVX    @DPTR,A
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 22  

                                           ; SOURCE LINE # 631
00A8 907069            MOV     DPTR,#07069H
00AB 741F              MOV     A,#01FH
00AD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 632
00AE 907079            MOV     DPTR,#07079H
00B1 7428              MOV     A,#028H
00B3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 634
                                           ; SOURCE LINE # 635
00B4 907014            MOV     DPTR,#07014H
00B7 7401              MOV     A,#01H
00B9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 636
00BA         ?C0010:
                                           ; SOURCE LINE # 639
00BA 907018            MOV     DPTR,#07018H
00BD E0                MOVX    A,@DPTR
00BE FF                MOV     R7,A
00BF EF                MOV     A,R7
00C0 5401              ANL     A,#01H
00C2 FF                MOV     R7,A
00C3 7E00              MOV     R6,#00H
00C5 EF                MOV     A,R7
00C6 4E                ORL     A,R6
00C7 70F1              JNZ     ?C0010
00C9         ?C0011:
00C9         ?C0012:
                                           ; SOURCE LINE # 640
00C9 907028            MOV     DPTR,#07028H
00CC E0                MOVX    A,@DPTR
00CD FF                MOV     R7,A
00CE EF                MOV     A,R7
00CF 5401              ANL     A,#01H
00D1 FF                MOV     R7,A
00D2 7E00              MOV     R6,#00H
00D4 EF                MOV     A,R7
00D5 4E                ORL     A,R6
00D6 70F1              JNZ     ?C0012
00D8         ?C0013:
00D8         ?C0014:
                                           ; SOURCE LINE # 641
00D8 907038            MOV     DPTR,#07038H
00DB E0                MOVX    A,@DPTR
00DC FF                MOV     R7,A
00DD EF                MOV     A,R7
00DE 5401              ANL     A,#01H
00E0 FF                MOV     R7,A
00E1 7E00              MOV     R6,#00H
00E3 EF                MOV     A,R7
00E4 4E                ORL     A,R6
00E5 70F1              JNZ     ?C0014
00E7         ?C0015:
00E7         ?C0016:
                                           ; SOURCE LINE # 642
00E7 907058            MOV     DPTR,#07058H
00EA E0                MOVX    A,@DPTR
00EB FF                MOV     R7,A
00EC EF                MOV     A,R7
00ED 5401              ANL     A,#01H
00EF FF                MOV     R7,A
00F0 7E00              MOV     R6,#00H
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 23  

00F2 EF                MOV     A,R7
00F3 4E                ORL     A,R6
00F4 70F1              JNZ     ?C0016
00F6         ?C0017:
00F6         ?C0018:
                                           ; SOURCE LINE # 643
00F6 907068            MOV     DPTR,#07068H
00F9 E0                MOVX    A,@DPTR
00FA FF                MOV     R7,A
00FB EF                MOV     A,R7
00FC 5401              ANL     A,#01H
00FE FF                MOV     R7,A
00FF 7E00              MOV     R6,#00H
0101 EF                MOV     A,R7
0102 4E                ORL     A,R6
0103 70F1              JNZ     ?C0018
0105         ?C0019:
0105         ?C0020:
                                           ; SOURCE LINE # 644
0105 907078            MOV     DPTR,#07078H
0108 E0                MOVX    A,@DPTR
0109 FF                MOV     R7,A
010A EF                MOV     A,R7
010B 5401              ANL     A,#01H
010D FF                MOV     R7,A
010E 7E00              MOV     R6,#00H
0110 EF                MOV     A,R7
0111 4E                ORL     A,R6
0112 70F1              JNZ     ?C0020
0114         ?C0021:
                                           ; SOURCE LINE # 647
0114 7B08              MOV     R3,#08H
0116 7A04              MOV     R2,#04H
0118 79C0              MOV     R1,#0C0H
011A C003              PUSH    AR3
011C C002              PUSH    AR2
011E C001              PUSH    AR1
0120 7B01              MOV     R3,#01H
0122 7A51              MOV     R2,#051H
0124 7910              MOV     R1,#010H
0126 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0129 120000      E     LCALL   ?C?PSTXDATA
012C D001              POP     AR1
012E D002              POP     AR2
0130 D003              POP     AR3
0132 7F06              MOV     R7,#06H
0134 7E00              MOV     R6,#00H
0136 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 649
0139 22                RET     
             ; FUNCTION cfg_dma_init (END)

             ; FUNCTION ClockSetup (BEGIN)
                                           ; SOURCE LINE # 667
                                           ; SOURCE LINE # 668
                                           ; SOURCE LINE # 678
0000 7B00              MOV     R3,#00H
0002 7A40              MOV     R2,#040H
0004 7980              MOV     R1,#080H
0006 7D02              MOV     R5,#02H
0008 7C00              MOV     R4,#00H
000A 120000      E     LCALL   _cywrite16
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 24  

                                           ; SOURCE LINE # 679
000D 904082            MOV     DPTR,#04082H
0010 7418              MOV     A,#018H
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 680
0013 7B00              MOV     R3,#00H
0015 7A40              MOV     R2,#040H
0017 7984              MOV     R1,#084H
0019 7D00              MOV     R5,#00H
001B 7C00              MOV     R4,#00H
001D 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 681
0020 904086            MOV     DPTR,#04086H
0023 7450              MOV     A,#050H
0025 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 682
0026 7B00              MOV     R3,#00H
0028 7A40              MOV     R2,#040H
002A 7988              MOV     R1,#088H
002C 7DFF              MOV     R5,#0FFH
002E 7C0F              MOV     R4,#0FH
0030 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 683
0033 90408A            MOV     DPTR,#0408AH
0036 741B              MOV     A,#01BH
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 684
0039 7B00              MOV     R3,#00H
003B 7A40              MOV     R2,#040H
003D 798C              MOV     R1,#08CH
003F 7D0B              MOV     R5,#0BH
0041 7C00              MOV     R4,#00H
0043 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 685
0046 90408E            MOV     DPTR,#0408EH
0049 7419              MOV     A,#019H
004B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 686
004C 7B00              MOV     R3,#00H
004E 7A40              MOV     R2,#040H
0050 7990              MOV     R1,#090H
0052 7D2F              MOV     R5,#02FH
0054 7C00              MOV     R4,#00H
0056 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 687
0059 904092            MOV     DPTR,#04092H
005C 7418              MOV     A,#018H
005E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 688
005F 7B00              MOV     R3,#00H
0061 7A40              MOV     R2,#040H
0063 7994              MOV     R1,#094H
0065 7DEF              MOV     R5,#0EFH
0067 7C00              MOV     R4,#00H
0069 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 689
006C 904096            MOV     DPTR,#04096H
006F 7418              MOV     A,#018H
0071 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 692
0072 7C00        R     MOV     R4,#HIGH BS_CYDEV_CLKDIST_ACFG0_CFG0_VAL
0074 7D00        R     MOV     R5,#LOW BS_CYDEV_CLKDIST_ACFG0_CFG0_VAL
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 25  

0076 7B00              MOV     R3,#00H
0078 7A41              MOV     R2,#041H
007A 7900              MOV     R1,#00H
007C 7F04              MOV     R7,#04H
007E 7E00              MOV     R6,#00H
0080 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 695
0083 904300            MOV     DPTR,#04300H
0086 7406              MOV     A,#06H
0088 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 698
0089 904200            MOV     DPTR,#04200H
008C 7452              MOV     A,#052H
008E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 699
008F 7B0C              MOV     R3,#0CH
0091 7A01              MOV     R2,#01H
0093 790F              MOV     R1,#0FH
0095 120000      E     LCALL   _cyread8
0098 9046A1            MOV     DPTR,#046A1H
009B EF                MOV     A,R7
009C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 702
009D 7B00              MOV     R3,#00H
009F 7A42              MOV     R2,#042H
00A1 7922              MOV     R1,#022H
00A3 7D10              MOV     R5,#010H
00A5 7C07              MOV     R4,#07H
00A7 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 703
00AA 7B00              MOV     R3,#00H
00AC 7A42              MOV     R2,#042H
00AE 7920              MOV     R1,#020H
00B0 7D51              MOV     R5,#051H
00B2 7C12              MOV     R4,#012H
00B4 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 705
00B7 900000      R     MOV     DPTR,#pllLock
00BA E4                CLR     A
00BB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 706
00BC 7F19              MOV     R7,#019H
00BE 7E00              MOV     R6,#00H
00C0 7D00              MOV     R5,#00H
00C2 7C00              MOV     R4,#00H
00C4 900000      R     MOV     DPTR,#timeout
00C7 120000      E     LCALL   ?C?LSTXDATA
00CA         ?C0023:
00CA 900000      R     MOV     DPTR,#timeout
00CD 120000      E     LCALL   ?C?LLDXDATA
00D0 D3                SETB    C
00D1 EF                MOV     A,R7
00D2 9400              SUBB    A,#00H
00D4 EE                MOV     A,R6
00D5 9400              SUBB    A,#00H
00D7 404E              JC      ?C0024
00D9 900000      R     MOV     DPTR,#pllLock
00DC E0                MOVX    A,@DPTR
00DD FF                MOV     R7,A
00DE EF                MOV     A,R7
00DF 6403              XRL     A,#03H
00E1 6044              JZ      ?C0024
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 26  

                                           ; SOURCE LINE # 707
                                           ; SOURCE LINE # 708
00E3 904225            MOV     DPTR,#04225H
00E6 E0                MOVX    A,@DPTR
00E7 FF                MOV     R7,A
00E8 EF                MOV     A,R7
00E9 5401              ANL     A,#01H
00EB FF                MOV     R7,A
00EC 7E00              MOV     R6,#00H
00EE 900000      R     MOV     DPTR,#pllLock
00F1 E0                MOVX    A,@DPTR
00F2 FE                MOV     R6,A
00F3 EE                MOV     A,R6
00F4 25E0              ADD     A,ACC
00F6 FE                MOV     R6,A
00F7 EE                MOV     A,R6
00F8 4F                ORL     A,R7
00F9 FF                MOV     R7,A
00FA EF                MOV     A,R7
00FB 5403              ANL     A,#03H
00FD FF                MOV     R7,A
00FE 900000      R     MOV     DPTR,#pllLock
0101 EF                MOV     A,R7
0102 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 709
0103 7FE0              MOV     R7,#0E0H
0105 7E01              MOV     R6,#01H
0107 7D00              MOV     R5,#00H
0109 7C00              MOV     R4,#00H
010B 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 710
010E 900000      R     MOV     DPTR,#timeout
0111 120000      E     LCALL   ?C?LLDXDATA
0114 7BFF              MOV     R3,#0FFH
0116 7AFF              MOV     R2,#0FFH
0118 79FF              MOV     R1,#0FFH
011A 78FF              MOV     R0,#0FFH
011C 120000      E     LCALL   ?C?LADD
011F 900000      R     MOV     DPTR,#timeout
0122 120000      E     LCALL   ?C?LSTXDATA
0125 80A3              SJMP    ?C0023
0127         ?C0024:
                                           ; SOURCE LINE # 712
0127 900000      R     MOV     DPTR,#timeout
012A 120000      E     LCALL   ?C?LLDXDATA
012D EF                MOV     A,R7
012E 4E                ORL     A,R6
012F 7005              JNZ     ?C0026
                                           ; SOURCE LINE # 713
                                           ; SOURCE LINE # 714
0131 7F03              MOV     R7,#03H
0133 120000      R     LCALL   _CyClockStartupError
                                           ; SOURCE LINE # 715
0136         ?C0026:
                                           ; SOURCE LINE # 718
0136 7B00              MOV     R3,#00H
0138 7A40              MOV     R2,#040H
013A 7904              MOV     R1,#04H
013C 7D00              MOV     R5,#00H
013E 7C01              MOV     R4,#01H
0140 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 719
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 27  

0143 904004            MOV     DPTR,#04004H
0146 7407              MOV     A,#07H
0148 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 720
0149 904006            MOV     DPTR,#04006H
014C E4                CLR     A
014D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 721
014E 904008            MOV     DPTR,#04008H
0151 7448              MOV     A,#048H
0153 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 722
0154 904004            MOV     DPTR,#04004H
0157 E4                CLR     A
0158 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 725
0159 904009            MOV     DPTR,#04009H
015C E4                CLR     A
015D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 726
015E 904001            MOV     DPTR,#04001H
0161 7402              MOV     A,#02H
0163 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 727
0164 90400B            MOV     DPTR,#0400BH
0167 7404              MOV     A,#04H
0169 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 729
016A 9043A2            MOV     DPTR,#043A2H
016D E0                MOVX    A,@DPTR
016E FF                MOV     R7,A
016F EF                MOV     A,R7
0170 443F              ORL     A,#03FH
0172 FF                MOV     R7,A
0173 9043A2            MOV     DPTR,#043A2H
0176 EF                MOV     A,R7
0177 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 730
0178 9043A1            MOV     DPTR,#043A1H
017B E0                MOVX    A,@DPTR
017C FF                MOV     R7,A
017D EF                MOV     A,R7
017E 4401              ORL     A,#01H
0180 FF                MOV     R7,A
0181 9043A1            MOV     DPTR,#043A1H
0184 EF                MOV     A,R7
0185 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 731
0186 9043A0            MOV     DPTR,#043A0H
0189 E0                MOVX    A,@DPTR
018A FF                MOV     R7,A
018B EF                MOV     A,R7
018C 4480              ORL     A,#080H
018E FF                MOV     R7,A
018F 9043A0            MOV     DPTR,#043A0H
0192 EF                MOV     A,R7
0193 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 732
0194 22                RET     
             ; FUNCTION ClockSetup (END)

             ; FUNCTION AnalogSetDefault (BEGIN)
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 28  

                                           ; SOURCE LINE # 754
                                           ; SOURCE LINE # 755
                                           ; SOURCE LINE # 756
0000 7B0C              MOV     R3,#0CH
0002 7A01              MOV     R2,#01H
0004 79CF              MOV     R1,#0CFH
0006 120000      E     LCALL   _cyread8
0009 900000      R     MOV     DPTR,#bg_xover_inl_trim
000C EF                MOV     A,R7
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 757
000E 900000      R     MOV     DPTR,#bg_xover_inl_trim
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
0014 5407              ANL     A,#07H
0016 FF                MOV     R7,A
0017 90586E            MOV     DPTR,#0586EH
001A EF                MOV     A,R7
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 758
001C 900000      R     MOV     DPTR,#bg_xover_inl_trim
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 C4                SWAP    A
0023 540F              ANL     A,#0FH
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 540F              ANL     A,#0FH
0029 FF                MOV     R7,A
002A 90586F            MOV     DPTR,#0586FH
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 759
002F 90510D            MOV     DPTR,#0510DH
0032 74E0              MOV     A,#0E0H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 760
0035 905B00            MOV     DPTR,#05B00H
0038 74E0              MOV     A,#0E0H
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 761
003B 905876            MOV     DPTR,#05876H
003E 7444              MOV     A,#044H
0040 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 762
0041 22                RET     
             ; FUNCTION AnalogSetDefault (END)

             ; FUNCTION _SetAnalogRoutingPumps (BEGIN)
                                           ; SOURCE LINE # 782
0000 900000      R     MOV     DPTR,#enabled
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 783
                                           ; SOURCE LINE # 784
0005 905876            MOV     DPTR,#05876H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#regValue
000D EF                MOV     A,R7
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 29  

000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 785
000F 900000      R     MOV     DPTR,#enabled
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 6010              JZ      ?C0029
                                           ; SOURCE LINE # 786
                                           ; SOURCE LINE # 787
0017 900000      R     MOV     DPTR,#regValue
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D 4422              ORL     A,#022H
001F FF                MOV     R7,A
0020 900000      R     MOV     DPTR,#regValue
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 788
0025 800E              SJMP    ?C0030
0027         ?C0029:
                                           ; SOURCE LINE # 790
                                           ; SOURCE LINE # 791
0027 900000      R     MOV     DPTR,#regValue
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C EF                MOV     A,R7
002D 54DD              ANL     A,#0DDH
002F FF                MOV     R7,A
0030 900000      R     MOV     DPTR,#regValue
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 792
0035         ?C0030:
                                           ; SOURCE LINE # 793
0035 900000      R     MOV     DPTR,#regValue
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A 905876            MOV     DPTR,#05876H
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 794
003F 22                RET     
             ; FUNCTION _SetAnalogRoutingPumps (END)

             ; FUNCTION _ADC_AMux_Set (BEGIN)
                                           ; SOURCE LINE # 824
0000 900000      R     MOV     DPTR,#channel
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 825
                                           ; SOURCE LINE # 826
0005 900000      R     MOV     DPTR,#channel
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B C3                CLR     C
000C 9402              SUBB    A,#02H
000E 5036              JNC     ?C0033
                                           ; SOURCE LINE # 827
                                           ; SOURCE LINE # 828
0010 900000      R     MOV     DPTR,#channel
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 30  

0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 EF                MOV     A,R7
0016 25E0              ADD     A,ACC
0018 2400        R     ADD     A,#LOW ADC_AMux__addrTable
001A F582              MOV     DPL,A
001C E4                CLR     A
001D 3400        R     ADDC    A,#HIGH ADC_AMux__addrTable
001F F583              MOV     DPH,A
0021 E4                CLR     A
0022 93                MOVC    A,@A+DPTR
0023 FE                MOV     R6,A
0024 7401              MOV     A,#01H
0026 93                MOVC    A,@A+DPTR
0027 FF                MOV     R7,A
0028 8F82              MOV     DPL,R7
002A 8E83              MOV     DPH,R6
002C C083              PUSH    DPH
002E C082              PUSH    DPL
0030 E0                MOVX    A,@DPTR
0031 FF                MOV     R7,A
0032 900000      R     MOV     DPTR,#channel
0035 E0                MOVX    A,@DPTR
0036 FE                MOV     R6,A
0037 EE                MOV     A,R6
0038 900000      R     MOV     DPTR,#ADC_AMux__maskTable
003B 93                MOVC    A,@A+DPTR
003C FE                MOV     R6,A
003D EF                MOV     A,R7
003E 4E                ORL     A,R6
003F FF                MOV     R7,A
0040 D082              POP     DPL
0042 D083              POP     DPH
0044 EF                MOV     A,R7
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 829
                                           ; SOURCE LINE # 830
0046         ?C0033:
0046 22                RET     
             ; FUNCTION _ADC_AMux_Set (END)

             ; FUNCTION _ADC_AMux_Unset (BEGIN)
                                           ; SOURCE LINE # 846
0000 900000      R     MOV     DPTR,#channel
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 847
                                           ; SOURCE LINE # 848
0005 900000      R     MOV     DPTR,#channel
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B C3                CLR     C
000C 9402              SUBB    A,#02H
000E 5039              JNC     ?C0035
                                           ; SOURCE LINE # 849
                                           ; SOURCE LINE # 850
0010 900000      R     MOV     DPTR,#channel
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 EF                MOV     A,R7
0016 25E0              ADD     A,ACC
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 31  

0018 2400        R     ADD     A,#LOW ADC_AMux__addrTable
001A F582              MOV     DPL,A
001C E4                CLR     A
001D 3400        R     ADDC    A,#HIGH ADC_AMux__addrTable
001F F583              MOV     DPH,A
0021 E4                CLR     A
0022 93                MOVC    A,@A+DPTR
0023 FE                MOV     R6,A
0024 7401              MOV     A,#01H
0026 93                MOVC    A,@A+DPTR
0027 FF                MOV     R7,A
0028 8F82              MOV     DPL,R7
002A 8E83              MOV     DPH,R6
002C C083              PUSH    DPH
002E C082              PUSH    DPL
0030 E0                MOVX    A,@DPTR
0031 FF                MOV     R7,A
0032 900000      R     MOV     DPTR,#channel
0035 E0                MOVX    A,@DPTR
0036 FE                MOV     R6,A
0037 EE                MOV     A,R6
0038 900000      R     MOV     DPTR,#ADC_AMux__maskTable
003B 93                MOVC    A,@A+DPTR
003C FE                MOV     R6,A
003D EE                MOV     A,R6
003E F4                CPL     A
003F FE                MOV     R6,A
0040 EF                MOV     A,R7
0041 5E                ANL     A,R6
0042 FF                MOV     R7,A
0043 D082              POP     DPL
0045 D083              POP     DPH
0047 EF                MOV     A,R7
0048 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 851
                                           ; SOURCE LINE # 852
0049         ?C0035:
0049 22                RET     
             ; FUNCTION _ADC_AMux_Unset (END)

             ; FUNCTION cyfitter_cfg (BEGIN)
                                           ; SOURCE LINE # 873
                                           ; SOURCE LINE # 874
                                           ; SOURCE LINE # 896
0000 7B00              MOV     R3,#00H
0002 7A46              MOV     R2,#046H
0004 79E8              MOV     R1,#0E8H
0006 120000      E     LCALL   _cyread8
0009 EF                MOV     A,R7
000A 4401              ORL     A,#01H
000C FD                MOV     R5,A
000D 7B00              MOV     R3,#00H
000F 7A46              MOV     R2,#046H
0011 79E8              MOV     R1,#0E8H
0013 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 898
                                           ; SOURCE LINE # 899
0016 120000      R     LCALL   cfg_dma_init
                                           ; SOURCE LINE # 902
0019 905883            MOV     DPTR,#05883H
001C 740A              MOV     A,#0AH
001E F0                MOVX    @DPTR,A
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 32  

                                           ; SOURCE LINE # 903
001F 7C00        R     MOV     R4,#HIGH BS_PHUB_CFGMEM10_VAL
0021 7D00        R     MOV     R5,#LOW BS_PHUB_CFGMEM10_VAL
0023 7B00              MOV     R3,#00H
0025 7A76              MOV     R2,#076H
0027 7950              MOV     R1,#050H
0029 7F04              MOV     R7,#04H
002B 7E00              MOV     R6,#00H
002D 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 906
0030 7B01              MOV     R3,#01H
0032 7A50              MOV     R2,#050H
0034 7903              MOV     R1,#03H
0036 120000      E     LCALL   _cyread8
0039 EF                MOV     A,R7
003A 4402              ORL     A,#02H
003C FD                MOV     R5,A
003D 7B01              MOV     R3,#01H
003F 7A50              MOV     R2,#050H
0041 7903              MOV     R1,#03H
0043 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 907
0046 7B01              MOV     R3,#01H
0048 7A50              MOV     R2,#050H
004A 7913              MOV     R1,#013H
004C 120000      E     LCALL   _cyread8
004F EF                MOV     A,R7
0050 4402              ORL     A,#02H
0052 FD                MOV     R5,A
0053 7B01              MOV     R3,#01H
0055 7A50              MOV     R2,#050H
0057 7913              MOV     R1,#013H
0059 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 910
005C 9043A0            MOV     DPTR,#043A0H
005F E0                MOVX    A,@DPTR
0060 FF                MOV     R7,A
0061 EF                MOV     A,R7
0062 4440              ORL     A,#040H
0064 FF                MOV     R7,A
0065 9043A0            MOV     DPTR,#043A0H
0068 EF                MOV     A,R7
0069 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 911
006A 9043C2            MOV     DPTR,#043C2H
006D E0                MOVX    A,@DPTR
006E FF                MOV     R7,A
006F EF                MOV     A,R7
0070 4410              ORL     A,#010H
0072 FF                MOV     R7,A
0073 9043C2            MOV     DPTR,#043C2H
0076 EF                MOV     A,R7
0077 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 912
                                           ; SOURCE LINE # 916
0078 7B08              MOV     R3,#08H
007A 7A1F              MOV     R2,#01FH
007C 79F0              MOV     R1,#0F0H
007E C003              PUSH    AR3
0080 C002              PUSH    AR2
0082 C001              PUSH    AR1
0084 7B00              MOV     R3,#00H
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 33  

0086 7A51              MOV     R2,#051H
0088 7900              MOV     R1,#00H
008A 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
008D 120000      E     LCALL   ?C?PSTXDATA
0090 D001              POP     AR1
0092 D002              POP     AR2
0094 D003              POP     AR3
0096 7F0A              MOV     R7,#0AH
0098 7E00              MOV     R6,#00H
009A 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 917
009D 7C00        R     MOV     R4,#HIGH BS_IOPINS0_7_VAL
009F 7D00        R     MOV     R5,#LOW BS_IOPINS0_7_VAL
00A1 7B00              MOV     R3,#00H
00A3 7A51              MOV     R2,#051H
00A5 79C2              MOV     R1,#0C2H
00A7 7F08              MOV     R7,#08H
00A9 7E00              MOV     R6,#00H
00AB 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 918
00AE 7C00        R     MOV     R4,#HIGH BS_IOPINS0_8_VAL
00B0 7D00        R     MOV     R5,#LOW BS_IOPINS0_8_VAL
00B2 7B00              MOV     R3,#00H
00B4 7A51              MOV     R2,#051H
00B6 79F0              MOV     R1,#0F0H
00B8 7F0A              MOV     R7,#0AH
00BA 7E00              MOV     R6,#00H
00BC 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 919
00BF 7C00        R     MOV     R4,#HIGH BS_IOPINS0_1_VAL
00C1 7D00        R     MOV     R5,#LOW BS_IOPINS0_1_VAL
00C3 7B00              MOV     R3,#00H
00C5 7A51              MOV     R2,#051H
00C7 7910              MOV     R1,#010H
00C9 7F0A              MOV     R7,#0AH
00CB 7E00              MOV     R6,#00H
00CD 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 920
00D0 7C00        R     MOV     R4,#HIGH BS_IOPINS0_2_VAL
00D2 7D00        R     MOV     R5,#LOW BS_IOPINS0_2_VAL
00D4 7B00              MOV     R3,#00H
00D6 7A51              MOV     R2,#051H
00D8 7922              MOV     R1,#022H
00DA 7F08              MOV     R7,#08H
00DC 7E00              MOV     R6,#00H
00DE 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 921
00E1 9044F4            MOV     DPTR,#044F4H
00E4 7401              MOV     A,#01H
00E6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 923
00E7 904322            MOV     DPTR,#04322H
00EA E0                MOVX    A,@DPTR
00EB FF                MOV     R7,A
00EC EF                MOV     A,R7
00ED 4408              ORL     A,#08H
00EF FF                MOV     R7,A
00F0 904322            MOV     DPTR,#04322H
00F3 EF                MOV     A,R7
00F4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 924
00F5 9046EC            MOV     DPTR,#046ECH
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 34  

00F8 E0                MOVX    A,@DPTR
00F9 FF                MOV     R7,A
00FA EF                MOV     A,R7
00FB C3                CLR     C
00FC 9405              SUBB    A,#05H
00FE 5006              JNC     ?C0036
                                           ; SOURCE LINE # 925
                                           ; SOURCE LINE # 926
0100 904689            MOV     DPTR,#04689H
0103 743A              MOV     A,#03AH
0105 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 927
0106         ?C0036:
                                           ; SOURCE LINE # 931
0106 904800            MOV     DPTR,#04800H
0109 74F1              MOV     A,#0F1H
010B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 933
010C 120000      R     LCALL   ClockSetup
                                           ; SOURCE LINE # 936
010F 120000      R     LCALL   AnalogSetDefault
                                           ; SOURCE LINE # 939
0112 7B00              MOV     R3,#00H
0114 7A43              MOV     R2,#043H
0116 79A0              MOV     R1,#0A0H
0118 C003              PUSH    AR3
011A C002              PUSH    AR2
011C C001              PUSH    AR1
011E 7B00              MOV     R3,#00H
0120 7A43              MOV     R2,#043H
0122 79B0              MOV     R1,#0B0H
0124 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0127 120000      E     LCALL   ?C?PSTXDATA
012A D001              POP     AR1
012C D002              POP     AR2
012E D003              POP     AR3
0130 7F0E              MOV     R7,#0EH
0132 7E00              MOV     R6,#00H
0134 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 940
0137 9043B0            MOV     DPTR,#043B0H
013A E0                MOVX    A,@DPTR
013B FF                MOV     R7,A
013C EF                MOV     A,R7
013D 54FD              ANL     A,#0FDH
013F FF                MOV     R7,A
0140 EF                MOV     A,R7
0141 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 941
0142 22                RET     
             ; FUNCTION cyfitter_cfg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1335    ----
   CONSTANT SIZE    =   2903    ----
   XDATA SIZE       =      4      11
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/11/2016 14:38:02 PAGE 35  

   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
