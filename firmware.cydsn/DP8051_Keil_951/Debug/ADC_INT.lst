C51 COMPILER V9.51   ADC_INT                                                               05/11/2016 14:38:08 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE ADC_INT
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Debug\ADC_INT.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\ADC_INT.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB WL(2) PR(
                    -.\DP8051_Keil_951\Debug/ADC_INT.lst) CD OT(2,SIZE) OJ(.\DP8051_Keil_951\Debug\ADC_INT.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: ADC_INT.c
   3          * Version 3.20
   4          *
   5          * Description:
   6          *  This file contains the code that operates during the ADC_DelSig interrupt
   7          *  service routine.
   8          *
   9          * Note:
  10          *
  11          ********************************************************************************
  12          * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13          * You may use this file only in accordance with the license, terms, conditions,
  14          * disclaimers, and limitations in the end user license agreement accompanying
  15          * the software package with which this file was provided.
  16          *******************************************************************************/
  17          
  18          #include "ADC.h"
  19          
  20          
  21          
  22          /*******************************************************************************
  23          * Custom Declarations and Variables
  24          * - add user include files, prototypes and variables between the following
  25          *   #START and #END tags
  26          *******************************************************************************/
  27          /* `#START ADC_SYS_VAR`  */
  28          
  29          /* `#END`  */
  30          
  31          #if(ADC_IRQ_REMOVE == 0u)
  32          
  33          
  34              /*****************************************************************************
  35              * Function Name: ADC_ISR1
  36              ******************************************************************************
  37              *
  38              * Summary:
  39              *  Handle Interrupt Service Routine.
  40              *
  41              * Parameters:
  42              *  None
  43              *
  44              * Return:
  45              *  None
  46              *
  47              * Reentrant:
  48              *  No
  49              *
  50              *****************************************************************************/
  51              CY_ISR( ADC_ISR1)
  52              {
  53   1              #ifdef ADC_ISR1_ENTRY_CALLBACK
C51 COMPILER V9.51   ADC_INT                                                               05/11/2016 14:38:08 PAGE 2   

                          ADC_ISR1_EntryCallback();
                      #endif /* ADC_ISR1_ENTRY_CALLBACK */
  56   1              
  57   1      
  58   1              /**************************************************************************
  59   1              *  Custom Code
  60   1              *  - add user ISR code between the following #START and #END tags
  61   1              **************************************************************************/
  62   1              /* `#START MAIN_ADC_ISR1`  */
  63   1      
  64   1              /* `#END`  */
  65   1              
  66   1              /* Stop the conversion if conversion mode is single sample and resolution
  67   1              *  is above 16 bits.
  68   1              */
  69   1              #if(ADC_CFG1_RESOLUTION > 16 && \
  70   1                  ADC_CFG1_CONV_MODE == ADC_MODE_SINGLE_SAMPLE)
                          ADC_StopConvert();
                          /* Software flag for checking conversion complete or not. Will be used when
                          *  resolution is above 16 bits and conversion mode is single sample 
                                      */
                          ADC_convDone = ADC_DEC_CONV_DONE;
                      #endif /* Single sample conversion mode with resolution above 16 bits */
  77   1      
  78   1              #ifdef ADC_ISR1_EXIT_CALLBACK
                          ADC_ISR1_ExitCallback();
                      #endif /* ADC_ISR1_EXIT_CALLBACK */
  81   1          }
  82          
  83          
  84              /*****************************************************************************
  85              * Function Name: ADC_ISR2
  86              ******************************************************************************
  87              *
  88              * Summary:
  89              *  Handle Interrupt Service Routine.
  90              *
  91              * Parameters:
  92              *  None
  93              *
  94              * Return:
  95              *  None
  96              *
  97              * Reentrant:
  98              *  No
  99              *
 100              *****************************************************************************/
 101              CY_ISR( ADC_ISR2)
 102              {
 103   1              #ifdef ADC_ISR2_ENTRY_CALLBACK
                          ADC_ISR2_EntryCallback();
                      #endif /* ADC_ISR2_ENTRY_CALLBACK */
 106   1              
 107   1              
 108   1              /***************************************************************************
 109   1              *  Custom Code
 110   1              *  - add user ISR code between the following #START and #END tags
 111   1              **************************************************************************/
 112   1              /* `#START MAIN_ADC_ISR2`  */
 113   1      
 114   1              /* `#END`  */
 115   1      
C51 COMPILER V9.51   ADC_INT                                                               05/11/2016 14:38:08 PAGE 3   

 116   1              /* Stop the conversion conversion mode is single sample and resolution
 117   1              *  is above 16 bits.
 118   1              */
 119   1              #if(ADC_CFG2_RESOLUTION > 16 && \
 120   1                  ADC_CFG2_CONVMODE == ADC_MODE_SINGLE_SAMPLE)
                          ADC_StopConvert();
                          /* Software flag for checking conversion complete or not. Will be used when
                          *   resolution is above 16 bits and conversion mode is single sample 
                                      */
                          ADC_convDone = ADC_DEC_CONV_DONE;
                      #endif /* Single sample conversion mode with resolution above 16 bits */
 127   1      
 128   1              #ifdef ADC_ISR2_EXIT_CALLBACK
                          ADC_ISR2_ExitCallback();
                      #endif /* ADC_ISR2_EXIT_CALLBACK */
 131   1          }
 132          
 133          
 134              /*****************************************************************************
 135              * Function Name: ADC_ISR3
 136              ******************************************************************************
 137              *
 138              * Summary:
 139              *  Handle Interrupt Service Routine.
 140              *
 141              * Parameters:
 142              *  None
 143              *
 144              * Return:
 145              *  None
 146              *
 147              * Reentrant:
 148              *  No
 149              *
 150              *****************************************************************************/
 151              CY_ISR( ADC_ISR3)
 152              {
 153   1              #ifdef ADC_ISR3_ENTRY_CALLBACK
                          ADC_ISR3_EntryCallback();
                      #endif /* ADC_ISR3_ENTRY_CALLBACK */        
 156   1      
 157   1              
 158   1              /***************************************************************************
 159   1              *  Custom Code
 160   1              *  - add user ISR code between the following #START and #END tags
 161   1              **************************************************************************/
 162   1              /* `#START MAIN_ADC_ISR3`  */
 163   1      
 164   1              /* `#END`  */
 165   1              
 166   1              /* Stop the conversion if conversion mode is set to single sample and
 167   1              *  resolution is above 16 bits.
 168   1              */
 169   1              #if(ADC_CFG3_RESOLUTION > 16 && \
 170   1                  ADC_CFG3_CONVMODE == ADC_MODE_SINGLE_SAMPLE)
                          ADC_StopConvert();
                          /* Software flag for checking conversion complete or not. Will be used when
                          *  resolution is above 16 bits and conversion mode is single sample 
                                      */
                          ADC_convDone = ADC_DEC_CONV_DONE;
                      #endif /* Single sample conversion mode with resolution above 16 bits */
 177   1      
C51 COMPILER V9.51   ADC_INT                                                               05/11/2016 14:38:08 PAGE 4   

 178   1              #ifdef ADC_ISR3_EXIT_CALLBACK
                          ADC_ISR3_ExitCallback();
                      #endif /* ADC_ISR3_EXIT_CALLBACK */        
 181   1          }
 182          
 183          
 184              /*****************************************************************************
 185              * Function Name: ADC_ISR4
 186              ******************************************************************************
 187              *
 188              * Summary:
 189              *  Handle Interrupt Service Routine.
 190              *
 191              * Parameters:
 192              *  None
 193              *
 194              * Return:
 195              *  None
 196              *
 197              * Reentrant:
 198              *  No
 199              *
 200              *****************************************************************************/
 201              CY_ISR( ADC_ISR4)
 202              {
 203   1              #ifdef ADC_ISR4_ENTRY_CALLBACK
                          ADC_ISR4_EntryCallback();
                      #endif /* ADC_ISR4_ENTRY_CALLBACK */            
 206   1      
 207   1              
 208   1              /***************************************************************************
 209   1              *  Custom Code
 210   1              *  - add user ISR code between the following #START and #END tags
 211   1              **************************************************************************/
 212   1              /* `#START MAIN_ADC_ISR4`  */
 213   1      
 214   1              /* `#END`  */
 215   1      
 216   1              /* Stop the conversion if conversion mode is set to single sample and
 217   1              *  resolution is above 16 bits.
 218   1              */
 219   1              #if(ADC_CFG4_RESOLUTION > 16 && \
 220   1                  ADC_CFG4_CONVMODE == ADC_MODE_SINGLE_SAMPLE)
                          ADC_StopConvert();
                          /* Software flag for checking conversion complete or not. Will be used when
                          *  resolution is above 16 bits and conversion mode is single sample 
                                      */
                          ADC_convDone = ADC_DEC_CONV_DONE;
                      #endif /* Single sample conversion mode with resolution above 16 bits */
 227   1              
 228   1              #ifdef ADC_ISR4_EXIT_CALLBACK
                          ADC_ISR4_ExitCallback();
                      #endif /* ADC_ISR4_EXIT_CALLBACK */            
 231   1          }
 232          
 233          #endif   /* End ADC_IRQ_REMOVE */
 234          
 235          
 236          /* [] END OF FILE */
C51 COMPILER V9.51   ADC_INT                                                               05/11/2016 14:38:08 PAGE 5   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION ADC_ISR1 (BEGIN)
                                           ; SOURCE LINE # 51
                                           ; SOURCE LINE # 81
0000 32                RETI    
             ; FUNCTION ADC_ISR1 (END)

             ; FUNCTION ADC_ISR2 (BEGIN)
                                           ; SOURCE LINE # 101
                                           ; SOURCE LINE # 131
0000 32                RETI    
             ; FUNCTION ADC_ISR2 (END)

             ; FUNCTION ADC_ISR3 (BEGIN)
                                           ; SOURCE LINE # 151
                                           ; SOURCE LINE # 181
0000 32                RETI    
             ; FUNCTION ADC_ISR3 (END)

             ; FUNCTION ADC_ISR4 (BEGIN)
                                           ; SOURCE LINE # 201
                                           ; SOURCE LINE # 231
0000 32                RETI    
             ; FUNCTION ADC_ISR4 (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =      4    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
